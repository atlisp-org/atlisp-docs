#+prefix: DCL回调变量
* DCL回调变量
DCL回调变量是用于在 DCL 回调表达式及回调函数中使用的变量。

共有4个， $key、$value、 $data、 $reason。

DCL定义文件中的写法 action="(princ $key)"

回调函数中的写法
(action_tile "a1" "(cb1)")
(defun cb1 ()
  (princ $key)
  (princ $data))
  
* $key
所选框件的唯一标识名。此变量适用于所有操作。
可以 action 回调 表达式中使用。

* $value
框件当前值的字符串形式，例如编辑框中的字符串，或切换中的“1”或“0”。
此变量适用于所有操作。

* $data
应用程序管理的数据（如果有）是在new_dialog时间之后通过client_data_tile设置的。

此变量适用于所有操作，但$data没有任何意义，除非您的应用程序已经通过调用client_data_tile对其进行了初始化。
* $reason,DCL回调原因

$reason 变量中返回的回调原因，指定了操作发生的原因。

变量的值是为任何类型的操作设置的，但只有当操作与edit_box、list_box、image_button或滑块相关联时，才需要检查它。以下概述了每个回调原因代码的值：
** 代码1
这是大多数动作框件的值。用户已经选择了互动程序（如果互动程序是默认的，并且平台可以识别快捷键，则可能通过按Enter键）。

** 代码2–编辑框

用户已退出编辑框（通过按Tab键或选择其他框件），但尚未进行最终选择。如果这是编辑框回调的原因，则应用程序不应更新关联变量的值，而应检查编辑框中值的有效性。

** 代码3–Sliders 滑块
用户通过拖动指示器（或等效操作）更改了滑块的值，但尚未进行最终选择。如果这是滑块回调的原因，则应用程序不应更新关联变量的值，而应更新显示滑块状态的文本。

** 代码4–列表框和图像按钮
这个回调原因总是跟在代码1后面。它通常意味着“提交到上一个选择”。它永远不应该撤消上一个选项；这会使用户感到困惑和烦恼。

列表框：用户双击了列表框。您可以在应用程序中定义双击的含义。如果对话框的主要目的是选择列表项，双击应进行选择，然后退出对话框。（在这种情况下，list_box框件的is_default属性应为true。）如果列表框不是对话框中的主框件，则双击应视为等效于进行选择（代码1）。

允许用户选择多个项目的列表框（multiple_select=true）不支持双击。

图像按钮：用户双击图像按钮。您可以在应用程序中定义双击的含义。在许多情况下，单击选择按钮是合适的，但在其他情况下，最好单击（或键盘操作）高亮显示按钮，然后用Enter键或双击选择它。
