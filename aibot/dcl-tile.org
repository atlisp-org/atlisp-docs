#+prefix: DCL框件
* tile,框件,磁贴,控件
在 DCL 中的组成对话框中的最小显示部件
DCL中的基本
定义:
tile {
     layout     = horizontal;
     is_enabled = true;
}

子框件
- text
- image
- button
  + image_button
- toggle
- radio_button
- list_box
- edit_box
- popup_list
- slider
- spacer

* boxed_column,带框竖向框集
分组框件，用于将组框件组织为一列，列周围有边框。
* boxed_radio_column,带框单选竖向框集
分组框件，用于将单选按钮框件组织为一列，列周围有边框。
* boxed_radio_row,带框单选水平框集
分组框件，用于将单选按钮框件组织为一行，行周围有边框。
* boxed_row,带框水平框集
分组框件，用于将组框件组织为一行，行周围有边框。
* button,按钮
DCL 按钮框件。
可用action定义回调表达式。当点击按钮时执行回调表达式（lisp中称为求值）。
用法：
dcl中: button{label="b1";key="b1";action="(cb-b1)"}
lisp中:
(action_tile "b1" "(cb-b1)")
(defun cb-b1 ()
  (princ $value))

* clusters,框集,dcl框集
您可以将框件分组为复合行或列（统称为框集）。
定义:
cluster {
      layout = horizontal;
}

出于布局目的，框集被视为单个框件。可以使用可选标签将行或列装箱（没有方框的框集不能标记）。
用户无法选择框集，只能选择框集中的单个框件。除了单选行和单选列之外，不能为框集分配操作。以下框件定义了框集：
子框件：
 - row
 - column
 - boxed_row
 - boxed_column
 - concatenation
 - paragraph

* radio_cluster
无线框集
定义：
radio_cluster {
      layout          = horizontal;
      is_enabled      = true;
}
子框件:
 - radio_row
 - radio_column
 - boxed_radio_row
 - boxed_radio_column


* column,竖向框集
分组磁贴，用于将磁贴组织为一列，而列周围没有边框。
* concatenation
串联是由多个串联的文本块组成的一行文本。
* dialog,对话框
dialog 是定义对话框的框件。
定义:
dialog {
      layout          = vertical;
      is_enabled      = false;
}

* edit_box,编辑框
编辑框是允许用户输入或编辑单行文本的字段。
* errtile,错误信息框件
错误框件是出现在对话框底部的文本框件。
* image Tile,图像
图像是显示矢量图形图片的矩形框件。
* image_button,图像按钮
图像按钮框件是显示图形图像而不是标签的按钮。
* list_box,列表框件
列表框包含按行排列的文本字符串列表。
* ok_cancel
ok_cancel互动程序框件是“确定”和“取消”按钮的组合，是可以发起数据更改的对话框的标准组合。
* ok_cancel_help
此框件是与“帮助”按钮组合的ok_cancel框集。
* ok_cancel_help_errtile
ok_cancel_help_errtile框件提供了一种方便的方法，可以同时指定退出按钮和错误框件。
* ok_cancel_help_info
ok_cancel_help_info框件执行ok_cancel _help框件执行的所有操作，但它还包括一个用于显示其他材料的信息按钮。
* ok_only
ok_only框件是一个单独的ok按钮，例如警报框使用的那种。
* paragraph,段落框集
段落是垂直排列的text_part或concatenation 框件的框集。
* popup_list,弹出列表
弹出列表或简单的弹出列表在功能上等同于列表框。
* radio_button,单选按钮
单选按钮是组成单选列或单选行的一组按钮之一。
* radio_column,单选竖向框集
单选列包含单选按钮磁贴，一次只能选择其中一个。
* radio_row,单选水平框集
单选行和单选列一样，包含单选按钮块，一次只能选择其中一个。
* row,水平框集
分组框集，用于将框件组织成一行，周围没有边框。
* slider,滑块框件
滑块获取数值。
* spacer,间隔
该框件用于在对话框定义中的其他框件之间添加空间。
spacer 间隔是一块空白框件。它仅用于布局目的，以影响相邻框件的大小和布局。为确保与其他对话框的一致性，请仅在特殊情况下使用间隔块，因为PDB功能会自动处理间距。请参见关于调整对话框布局（AutoLISP）。
除了标准布局属性之外，间隔框件没有其他属性。

* spacer_0
spacer_0用于在对话框定义中的其他框件之间添加空间。

spacer_0是一个通常没有宽度的间隔撒框件。但是，如果在布局过程中必须拉伸图块组，它会指示图块组中要插入空间的点。如果组中的spacer_0图块被分配了正宽度，则所有图块都被分配了相等的间距份额。

原始定义：
spacer_0 : spacer {
    height = 0;
    width = 0;
    horizontal_margin = none;
    vertical_margin = none;
}

* spacer_1
spacer_1框件用于在对话框定义中的其他框件之间添加空间。spacer_1 是一个宽高均1的框件。

原始定义：
spacer_1 : spacer {
    height = 1;
    width = 1;
    horizontal_margin = none;
    vertical_margin = none;
}
* text_Tile,文本框件
文本本框件显示用于标题或信息目的的文本字符串。
因为大多数图块都有自己的标签属性用于标题，所以您并不总是需要使用文本图块。但是，通常保持空白的文本块是显示有关用户操作、错误消息或警告的反馈的有用方法。

如果您希望消息是静态的，请在标签属性中指定它，而不要指定宽度或值。如果您打算在运行时更改消息，请在value属性中指定它，并分配一个足够长的宽度，以包含您计划分配值的任何字符串。一旦对话框被布局，其平铺的大小就不能改变，因此如果使用set_tile指定一个长于宽度的字符串，则显示的文本将被截断。

属性: label
显示的文本。当布局文本平铺时，如果DCL中指定了宽度属性，则其宽度大于宽度属性，如果指定了标签属性，则宽度大于标签属性所需的宽度。必须至少指定其中一个属性。

属性: value
与标签类似，value属性指定要在文本平铺中显示的字符串。但是，它对磁贴的布局没有影响。
* text_part,文本片断框件
文本部分是一块较大文本的一部分的文本框件。
text_part的边距被抑制，因此它可以与其他text_part组合成一个连接或段落图块。
定义:
text_part : text {
    horizontal_margin = none;
    vertical_margin = none;
}


* toggle,开关框件,复选框件
切换显示为一个小框，框右侧有一个可选标签。
* destroy_button
** destroy_button : retirement_button {label = "&Destroy"; key = "destroy";}
用于替换默认的退出按钮。
···
destroy_button : retirement_button {
  label = "&Destroy";
  key = "destroy";
}
···
