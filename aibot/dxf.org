#+qprefix: dxf
#+prefix: DXF
* -5
APP：永久反应器链
* -4
APP：条件运算符（仅与 ssget 一起使用）
* -3
APP：扩展数据 (XDATA) 标记（固定）
扩展数据过滤。ALISP 中可以用如下方法给图形添加扩展数据，增加自定义组码及表值。

第一步，注册一个扩展对象应用名
(regapp “xapp”)

第二步，选择一个图元并返回组码
(setq En (entget (car (entsel))))

第三步，定义加入图元的扩展数据
(setq data ‘((-3 (“xapp” (1000 . “你好中国”)))))

第四步，将扩展数据附着更新图元
(entmod (append En data))

完成，我们可以检查一下扩展数据
(assoc -3 (entget (car (entsel)) ‘(“xapp”)))
结果返回 (-3 (“xapp” (1000 . “你好中国”))) 采用这种方法添加扩展数据，用 EXPLODE 命令不能清除。

** 与 -3 组码无关的话题。
用 VLisp 函数给图元添加数据比较简单，无需提前注册名称，例如 (vlax-ldata-put (car (entsel)) “xa” “你好中国”) 查询数据如下： (vlax-ldata-get (car (entsel)) “xa”) 返回 “你好中国”。
采用这种方法，用 EXPLODE 命令可以炸开扩展数据，相当于清除图元的扩展数据。 

这时候的 ssget 方显英雄本色，用来精确选择，再适合不过。在参数化制图时，添加扩展数据，当参数 发生变化时，很容易遍历修改这些对象，由于扩展数据的不可见和不可分解的特性，不会被用户误操作。 这时候只需要用下面代码即可完成过滤，连对象类别的 0 组码 都不需要了。

(ssget ‘((-3 (“xapp”))))

* -2
APP：图元名参照（固定）
* -1
APP：图元名。每次打开图形时，图元名都会发生变化，从不保存（固定）
* 0
表示图元类型的字符串（固定）
* 1
图元的主文字值
* 2
名称（属性标记、块名等）
* 3-4
其他文字或名称值
* 5
图元句柄；最多 16 个十六进制数字的字符串（固定）
* 6
线型名（固定）（如果不是“BYLAYER”，则出现）。特殊名称“BYBLOCK”表示可变的线型（可选）
* 7
文字样式名（固定）
* 8
图层名（固定）
* 9
DXF：变量名称标识符（仅在 DXF 文件的 HEADER 段中使用）
* 10
主要点；直线或文字图元的起点、圆的圆心，等等
DXF：主要点的 X 值（后跟 Y 和 Z 值代码 20 和 30）
APP：三维点（三个实数的列表）
* 11-18
其他点
DXF：其他点的 X 值（后跟 Y 值代码 21-28 和 Z 值代码 31-38）
APP：三维点（三个实数的列表）
* 20, 30
DXF：主要点的 Y 值和 Z 值
* 21-28, 31-37
DXF：其他点的 Y 值和 Z 值
* 38
DXF：如果非零，则为图元的标高
* 39
如果非零，则为图元的厚度（固定)
* 40-47
双精度浮点值（文字高度、缩放比例等）
* 48
线型比例；双精度浮点标量值；默认值适用于所有图元类型
* 49
重复的双精度浮点值。一个图元的可变长度表（例如，LTYPE 表中的虚线长度）中可能会出现多个 49 组。7x 组始终出现在第一个 49 组之前，用以指定表的长度
* 50-58
角度（在 DXF 文件中以度为单位，在 AutoLISP 和 ObjectARX 应用程序中以弧度为单位）
* 60
图元可见性；整数值；未赋值或值为 0 时表示可见；值为 1 时表示不可见
* 62
颜色号（固定）
* 66
“后跟图元”标志（固定）
* 67
空间 — 模型空间或图纸空间（固定）
不存在或零表示图元位于模型空间中。1 表示图元位于图纸空间中（可选）
* 68
APP：指示视口是处于打开状态但在屏幕上完全不可见，还是未激活或处于关闭状态
* 69
APP：视口标识号
* 70
整数值，例如重复计数、标志位或模式
** 块类型标志（按位编码值，可以组合使用）：
0 = 表示不应用下列任何标志
1 = 由图案填充、关联标注、其他内部操作或应用程序生成的匿名块
2 = 块具有非固定属性定义（如果块具有任何固定属性定义或根本没有属性定义，则不设定此位）
4 = 块是外部参照 (xref)
8 = 块是外部参照覆盖
16 = 块依赖外部参照
32 = 块是融入的外部参照，或者依赖外部参照（输入时被忽略）
64 = 定义是被引用的外部参照（输入时
被忽略）
* 71-78
整数值，例如重复计数、标志位或模式
* 90-91,93-99
dword 32 位整数值
* 92
后面的 310 组（二进制数据块记录）中表示的代理图元图形中的字节数（可选）
* 100
子类数据标记（将派生类名作为字符串）从其他具体类派生的所有对象和图元类必须具有此标记。子类数据标记用于分离由同一对象的继承链中的不同类定义的数据。
对于从 ObjectARX 派生的每个不同的具体类的 DXF 名称来说，这是必须满足的额外要求（参见“子类标记”）
* 102
控制字符串，后跟“{<任意名称>”或“}”。与扩展数据 1002 组码类似，不同之处在于当字符串以“{”开始时，其后可跟任意字符串，字符串的解释取决于应用程序。唯一允许的另外一个控制字符串是作为组结束符的“}”。在图形审核操作期间以外，AutoCAD 不会解释这些字符串。它们供应用程序使用.
“{ACAD_REACTORS”表示 AutoCAD 永久反应器组的开始。仅当将永久反应器附加到此对象时，此组才存在（可选）
* 105
DIMVAR 符号表条目的对象句柄
* 110
UCS 原点（仅当将代码 72 设定为 1 时才显示）
DXF：X 值；APP：三维点
* 111
UCS X 轴（仅当将代码 72 设定为 1 时才显示）
DXF：X 值；APP：三维矢量
* 112
UCS Y 轴（仅当将代码 72 设定为 1 时才显示）
DXF：X 值；APP：三维矢量
* 120-122
DXF：UCS 原点的 Y 值，UCS X 轴和 UCS Y 轴
* 130-132
DXF：UCS 原点的 Z 值，UCS X 轴和 UCS Y 轴
* 140-149
双精度浮点值（例如点、标高和 DIMSTYLE 设置）
* 170-179
Word 16 位整数值，例如表示 DIMSTYLE 设置的标志位
* 210
拉伸方向（固定）
DXF：拉伸方向的 X 值
APP：三维拉伸方向矢量
* 220, 230
DXF：拉伸方向的 Y 值和 Z 值
* 270-279
16 位整数值
* 280-283,285-289
16 位整数值
* 284
阴影模式
0 = 投射和接收阴影
1 = 投射阴影
2 = 接收阴影
3 = 忽略阴影
注意:从基于 AutoCAD 2016 的产品开始，该特性已弃用，但是为了实现向后兼容性，该特性仍受支持。
* 290-299
布尔标志值
* 300-309
任意字符串
* 310
代理图元图形数据（多行；每行最多 256 个字符）（可选）
具有相同表示和 1004 组码限制的任意二进制块：用最大长度为 254 个字符的十六进制字符串表示最大长度为 127 个字节的数据块
* 311-319
具有相同表示和 1004 组码限制的任意二进制块：用最大长度为 254 个字符的十六进制字符串表示最大长度为 127 个字节的数据块
* 320-329
任意对象句柄；“按原样”获取的句柄值。它们在 INSERT 和 XREF 操作期间不进行转换
* 330-339
软指针句柄；指向同一个 DXF 文件或图形中的其他对象的任意软指针。在 INSERT 和 XREF 操作期间进行转换
330 所有者 BLOCK_RECORD 对象的软指针 ID/句柄
* 340-349
硬指针句柄；指向同一个 DXF 文件或图形中的其他对象的任意硬指针。在 INSERT 和 XREF 操作期间进行转换.
347 材质对象的硬指针 ID/句柄（如果不是“BYLAYER”，则出现）
* 350-359
软所有者句柄；指向同一个 DXF 文件或图形中的其他对象的任意软所有者指针。在 INSERT 和 XREF 操作期间进行转换
* 360-369
硬所有者句柄；指向同一个 DXF 文件或图形中的其他对象的任意硬所有者指针。在 INSERT 和 XREF 操作期间进行转换.
所有者词典的硬所有者 ID/句柄（可选）
* 370-379
线宽枚举值 (AcDb::LineWeight)。作为 16 位整数存储和移动。自定义非图元对象可以使用整个范围内的组码，但图元类只能在其表示中使用 371-379 DXF 组码，因为 AutoCAD 和 AutoLISP 都始终假定 370 组码是图元的线宽。这使 370 组码与其他“通用”图元字段具有相似行为
* 380-389
PlotStyleName 类型枚举 (AcDb::PlotStyleNameType)。作为 16 位整数存储和移动。自定义非图元对象可以使用整个范围内的组码，但图元类只能在其表示中使用
* 390-399
表示 PlotStyleName 对象的句柄值的字符串，本质上是硬指针，但范围不同，更容易处理向后兼容。作为对象 ID（在 DXF 文件中为句柄）和 AutoLISP 中的特殊类型存储和移动。自定义非图元对象可以使用整个范围内的组码，但图元类只能在其表示中使用 391-399 DXF 组码，原因与上述线宽范围相同
* 400-409
WORD 16 位整数
* 410-419
字符串, 410 APP：布局选项卡名
* 420-427
DWORD 32 位整数值。与真彩色一同使用时，表示 24 位颜色值的 32 位整数。高阶字节（8 位）为 0；低阶字节为包含“蓝色”值 (0-255)、然后是“绿色”值的无符号字符；次高阶字节是“红色”值。将此整数值转换为十六进制值将得到以下位掩码：0x00RRGGBB。例如，红色==200、绿色==100 和蓝色==50 的真彩色为 0x00C86432，而在 DXF 中以十进制表示则为 13132850
* 430-437
字符串；用于真彩色时，则为表示颜色名称的字符串
* 440-447
DWORD 32 位整数值。用于真彩色时，表示透明度值
* 450-459
长整数
* 460-469
双精度浮点值
* 470-479
字符串
* 480-481
硬指针句柄；指向同一个 DXF 文件或图形中的其他对象的任意硬指针。在 INSERT 和 XREF 操作期间进行转换
* 999
DXF：999 组码指示后面的行是注释字符串。SAVEAS 不会在 DXF 输出文件中包含这样的组，但 OPEN 则包括这些组并忽略注释。可以使用 999 组在您已编辑的 DXF 文件中包含注释
* 1000
扩展数据中的 ASCII 字符串（最多可以包含 255 个字节）
* 1001
扩展数据的注册应用程序名（最多可以包含 31 个字节的 ASCII 字符串）
* 1002
扩展数据控制字符串（“{”或“}”）
* 1003
扩展数据图层名
* 1004
扩展数据中的字节数据块（最多可以包含 127 个字节）
* 1005
扩展数据中的图元句柄；最多可以包含 16 个十六进制数字的字符串
* 1010
扩展数据中的点
DXF：X 值（后跟 1020 和 1030 组）
APP：三维点
* 1020, 1030
DXF：点的 Y 值和 Z 值
* 1011
扩展数据中的三维世界空间位置
DXF：X 值（后跟 1021 和 1031 组）
APP：三维点
* 1021, 1031
DXF：世界空间位置的 Y 值和 Z 值
* 1012
扩展数据中的三维世界空间位移
DXF：X 值（后跟 1022 和 1032 组）
APP：三维矢量
* 1022, 1032
DXF：世界空间位移的 Y 值和 Z 值
* 1013
扩展数据中的三维空间方向
DXF：X 值（后跟 1022 和 1032 组）
APP：三维矢量
* 1023, 1033
DXF：世界空间方向的 Y 和 Z 值
* 1040
扩展数据双精度浮点值
* 1041
扩展数据距离值
* 1042
扩展数据缩放比例
* 1070
扩展数据 16 位有符号整数
* 1071
扩展数据 32 位有符号长整数
* 3DFACE, 三维面
** 100
子类标记 (AcDbFace)
** 10
第一角点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：第一角点的 Y 值和 Z 值（在 WCS 中）
** 11
第二角点（在 WCS 中）
DXF：X 值；APP：三维点
** 21, 31 
DXF：第二角点的 Y 值和 Z 值（在 WCS 中）
** 12
第三角点（在 WCS 中）
DXF：X 值；APP：三维点
** 22, 32
DXF：第三角点的 Y 值和 Z 值（在 WCS 中）
** 13
第四角点（在 WCS 中）。如果只输入了三个角点，则第四角点与第三角点相同
DXF：X 值；APP：三维点
** 23, 33
DXF：第四角点的 Y 值和 Z 值（在 WCS 中）
** 70
不可见边标志（可选；默认值 = 0）：
1 = 第一条边不可见
2 = 第二条边不可见
4 = 第三条边不可见
8 = 第四条边不可见
* 3DSOLID, 三维实体
** 100
子类标记 (AcDbModelerGeometry)
** 70
建模格式版本号（当前值 = 1）
** 1
所有权数据（多行，每行 < 255 个字符）
** 3
所有权数据的附加行（如果前一个组 1 的字符串长度大于 255 个字符）（可选）
** 100
子类标记 (AcDb3dSolid)
** 350
历史记录对象的软所有者 ID/句柄
* ACAD_PROXY_ENTITY
** 100 DXF：AcDbProxyEntity
** 90  DXF：代理图元类 ID（始终为 498）
** 91  DXF：应用程序图元的类 ID。类 ID 基于 CLASSES 段中类的次序。第一个类的 ID 是 500，下一个是 501，依此类推
** 92  DXF：图形数据的大小（以字节为单位）
** 310 DXF：二进制图形数据（可能会出现多个条目）（可选）
** 93  DXF：图元数据的大小（以位为单位）
** 310 DXF：二进制图元数据（可能会出现多个条目）（可选）
** 330、340、350 或 360   DXF：对象 ID（可能会出现多个条目）（可选）
** 94  DXF：0（表示对象 ID 段的结束）
** 95  DXF：对象成为代理时的对象图形格式（32 位无符号整数）：
    低位字是 AcDbDwgVersion
    高位字是 MaintenanceReleaseVersion
** 70  DXF：原始自定义对象数据格式：
    0 = DWG 格式
    1 = DXF 格式
* ARC, 弧
** 100
子类标记 (AcDbCircle)
** 39
厚度（可选；默认值 = 0）
** 10
中心点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：中心点的 Y 值和 Z 值（在 OCS 中）
** 40
半径
** 100
子类标记 (AcDbArc)
** 50
起点角度
** 51
端点角度
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* ATTDEF, 属性定义
** 100
子类标记 (AcDbText)
** 39
厚度（可选；默认值 = 0）
** 10
第一对齐点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：文字起点的 Y 值和 Z 值（在 OCS 中）
** 40
文字高度
** 1
默认值（字符串）
** 50
文字旋转角度（可选；默认值 = 0）
** 41
X 相对缩放比例（宽度）（可选；默认值 = 1）。使用拟合类型的文字时，该值也将进行调整。
** 51
倾斜角（可选；默认值 = 0）
** 7
文字样式名（可选；默认值 = 标准）
** 71
文字生成标志（可选；默认值 = 0）；参见 TEXT 组码
** 72
文字水平对正类型（可选；默认值 = 0）；参见 TEXT 组码
** 11
第二对齐点（在 OCS 中）（可选）
DXF：X 值；APP：三维点
仅当 72 或 74 组值非零时才有意义
** 21, 31
DXF：第二对齐点的 Y 值和 Z 值（在 OCS 中）（可选）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值
=dxfattdef1=
* ATTDEF1
** 100
子类标记 (AcDbAttributeDefinition)
** 280
版本号：
0 = 2010
** 3
提示字符串
** 2
标签字符串（不能包含空格）
** 70
属性标记：
1 = 属性不可见（不出现）
2 = 固定属性
4 = 输入属性时要求进行验证
8 = 属性为预设（插入时无提示）
** 73
字段长度（可选；默认值 = 0）（当前未使用）
** 74
文字垂直对正类型（可选；默认值 = 0）；参见 TEXT 中的组码 73
** 280
锁定位置标志。锁定块参照中属性的位置
=dxfattdef2=
* ATTDEF2
** 100
子类标记 (AcDbXrecord)
** 280
重复记录克隆标志（决定如何合并重复条目）：
1 = 保留现有
** 70
多行文字标志：
2 = 多行文字属性
4 = 固定多行文字属性定义
** 70
实际锁定标志：
0 = 解锁
1 = 锁定
** 70
次要属性数或属性定义数
** 340
次要属性或属性定义的硬指针 ID
** 10
属性或属性定义对齐点
DXF：X 值；APP：三维点
** 20,30
DXF：插入点的 Y 值和 Z 值
** 40
当前注释比例
** 2
属性或属性定义标签字符串
** 0
图元类型 (MTEXT)
=dxfattdef3=
* ATTDEF3
** 100
子类标记 (AcDbEntity)
** 67
不存在或零表示图元位于模型空间中。1 表示图元位于图纸空间中（可选）
** 8
图层名
** 100
子类标记 (AcDbMText)
** 10
插入点
DXF：X 值；APP：三维点
** 20,30
DXF：插入点的 Y 值和 Z 值
** 40
标称（初始）文字高度
** 41
参照矩形宽度
** 46
定义注释高度
** 71
附着点：
1 = 左上；2 = 中上；3 = 右上
4 = 左中；5 = 正中；6 = 右中
7 = 左下；8 = 中下；9 = 右下
** 72
图形方向：
1 = 从左到右
3 = 从上到下
5 = 随样式（从相关文字样式继承走向）
** 1
文字字符串
如果字符串长度小于 250 个字符，所有字符均出现在组 1 中。如果字符串长度大于 250 个字符，该字符串将分成长度为 250 个字符的数据块，并显示在一个或多个组 3 代码中。如果使用组 3 代码，则最后一个组将是组 1 并且少于 250 个字符。
** 3
附加文字（始终在长度为 250 个字符的数据块中）（可选）
** 7
DXF：X 值；APP：三维矢量文字样式名（如果未提供，则为 STANDARD）（可选）
=dxfattdef4=
* ATTDEF4
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220,230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 11
X 轴方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21,31
DXF：X 轴方向矢量的 Y 值和 Z 值（在 WCS 中）
** 42
构成多行文字图元的字符的水平宽度。
该值始终等于或小于组码 41 的值（只读，如果提供则忽略）。
** 43
多行文字图元的垂直高度（只读，如果提供则忽略）
** 50
以弧度为单位的旋转角度
** 73
多行文字的行距样式（可选）：
1= 至少（将替代为较高的字符）
2 = 精确（将不替代为较高的字符）
** 44
多行文字的行距比例（可选）：
要应用的行距的默认百分比（五分之三）。
有效值的范围从 0.25 到 4.00
** 90
背景填充设置：
0 = 背景填充关闭
1 = 使用背景填充颜色
2 = 使用图形窗口颜色作为背景填充颜色
** 63
背景色（颜色索引编号）
=dxfattdef5=
* ATTDEF5
** 420-429
背景色（RGB 颜色）
** 430-439
背景色（颜色名）
** 45
填充框大小（可选）：
确定文字周围的边框大小。
** 63
背景填充颜色（可选）：
组码 90 为 1 时要用于背景填充的颜色。
** 441
背景填充颜色的透明度（未实现）
* ATTRIB, 属性
** 100
子类标记 (AcDbText)
** 39
厚度（可选；默认值 = 0）
** 10
文字起点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：文字起点的 Y 值和 Z 值（在 OCS 中）
** 40
文字高度
** 1
默认值（字符串）
** 100
子类标记 (AcDbAttribute)
** 280
版本号：
0 = 2010
** 2
属性标签（字符串；不能包含空格）
** 70
属性标记：
1 = 属性不可见（不出现）
2 = 固定属性
4 = 输入属性时要求进行验证
8 = 属性为预设（插入时无提示）
** 73
字段长度（可选；默认值 = 0）（当前未使用）
** 50
文字旋转角度（可选；默认值 = 0）
** 41
X 相对缩放比例（宽度）（可选；默认值 = 1）。使用拟合类型的文字时，该值也将进行调整。
** 51
倾斜角（可选；默认值 = 0）
** 7
文字样式名（可选；默认值 = 标准）
** 71
文字生成标志（可选；默认值 = 0）。请参见“TEXT 组码”
** 72
文字水平对正类型（可选；默认值 = 0）。请参见“TEXT 组码”
** 74
垂直文字对正类型（可选；默认值 = 0）。请参见“TEXT 中的组码 73”
** 11
对齐点（在 OCS 中）（可选）
DXF：X 值；APP：三维点
只有当 72 或 74 组出现且非零时才出现
** 21, 31
DXF：对齐点的 Y 值和 Z 值（在 OCS 中）（可选）
** 210
拉伸方向。仅当图元的拉伸方向与 WCS 的 Z 轴不平行时才出现（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 280
锁定位置标志。锁定块参照中属性的位置
** 100
子类标记 (AcDbXrecord)
** 280
重复记录克隆标志（决定如何合并重复条目）：
1 = 保留现有
** 70
多行文字标志：
2 = 多行文字属性
4 = 固定多行文字属性定义
** 70
实际锁定标志：
0 = 解锁
1 = 锁定
** 70
次要属性数或属性定义数
340
次要属性或属性定义的硬指针 ID
** 10
属性或属性定义对齐点
DXF：X 值；APP：三维点
** 20,30
DXF：插入点的 Y 值和 Z 值
** 40
当前注释比例
** 2
属性或属性定义标签字符串
** 0
图元类型 (MTEXT)
** 100
子类标记 (AcDbEntity)
** 67
不存在或零表示图元位于模型空间中。1 表示图元位于图纸空间中（可选）
** 8
图层名
** 100
子类标记 (AcDbMText)
** 10
插入点
DXF：X 值；APP：三维点
** 20,30
DXF：插入点的 Y 值和 Z 值
** 40
标称（初始）文字高度
** 41
参照矩形宽度
** 46
定义注释高度
** 71
附着点：
1 = 左上；2 = 中上；3 = 右上
4 = 左中；5 = 正中；6 = 右中
7 = 左下；8 = 中下；9 = 右下
** 72
图形方向：
1 = 从左到右
3 = 从上到下
5 = 随样式（从相关文字样式继承走向）
** 1
文字字符串
如果字符串长度小于 250 个字符，所有字符均出现在组 1 中。如果字符串长度大于 250 个字符，该字符串将分成长度为 250 个字符的数据块，并显示在一个或多个组 3 代码中。如果使用组 3 代码，则最后一个组将是组 1 并且少于 250 个字符。
** 3
附加文字（始终在长度为 250 个字符的数据块中）（可选）
** 7
DXF：X 值；APP：三维矢量文字样式名（如果未提供，则为 STANDARD）（可选）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220,230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 11
X 轴方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21,31
DXF：X 轴方向矢量的 Y 值和 Z 值（在 WCS 中）
** 42
构成多行文字图元的字符的水平宽度。
该值始终等于或小于组码 41 的值（只读，如果提供则忽略）。
** 43
多行文字图元的垂直高度（只读，如果提供则忽略）
** 50
以弧度为单位的旋转角度
** 73
多行文字的行距样式（可选）：
1= 至少（将替代为较高的字符）
2 = 精确（将不替代为较高的字符）
** 44
多行文字的行距比例（可选）：
要应用的行距的默认百分比（五分之三）。
有效值的范围从 0.25 到 4.00
** 90
背景填充设置：
0 = 背景填充关闭
1 = 使用背景填充颜色
2 = 使用图形窗口颜色作为背景填充颜色
** 63
背景色（颜色索引编号）
** 420-429
背景色（RGB 颜色）
** 430-439
背景色（颜色名）
** 45
填充框大小（可选）：
确定文字周围的边框大小。
** 63
背景填充颜色（可选）：
组码 90 为 1 时要用于背景填充的颜色。
** 441
背景填充颜色的透明度（未实现）
* BODY
** 100
子类标记 (AcDbModelerGeometry)
** 70
建模格式版本号（当前值 = 1）
** 1
所有权数据（多行，每行 < 255 个字符）
** 3
所有权数据的附加行（如果前一个组 1 的字符串长度大于 255 个字符）（可选）
* CIRCLE, 圆
** 100
子类标记 (AcDbCircle)
** 39
厚度（可选；默认值 = 0）
** 10
中心点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：中心点的 Y 值和 Z 值（在 OCS 中）
** 40
半径
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* COORDINATION MODEL
** 0
对象名（协调模型）
** 5
句柄
** 330
所有者词典的软指针 ID/句柄
** 100
子类标记 (AcDbNavisworksModel)
** 340
指向 AcDbNavisworksModelDef 对象的软指针 ID/句柄
40, 40, 40, 40
40, 40, 40, 40
40, 40, 40, 40
40, 40, 40, 40
WCS 坐标中的模型转换（4x4 矩阵）
** 40
插入单位因子
* DIMENSION, 标注
** 100
子类标记 (AcDbDimension)
** 280
版本号：
0 = 2010
** 2
包含构成标注图片的图元的块的名称
** 10
定义点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：定义点的 Y 值和 Z 值（在 WCS 中）
** 11
标注文字的中点（在 OCS 中）
DXF：X 值；APP：三维点
** 21, 31
DXF：标注文字中点的 Y 值和 Z 值（在 OCS 中）
** 70
标注类型：
值 0-6 是表示标注类型的整数值。值 32、64 和 128 是添加到整数值中的位值（在 R13 及以后的版本中始终设定值 32）
0 = 旋转、水平或垂直
1 = 对齐
2 = 角度
3 = 直径
4 = 半径
5 = 三点角度
6 = 坐标
32 = 表示块参照（组码 2）仅由该标注参照。
64 = 坐标类型。这是一个位值（位 7），仅与整数值 6 一起使用。如果设置该值，则坐标为 X 类型；如果不设置，则坐标为 Y 类型。
128 = 这是一个添加到其他组 70 值的位值（位 8）（如果标注文字已放置到用户定义的位置，而不是放置到默认位置）
** 71
附着点：
1 = 左上
2 = 中上
3 = 右上
4 = 左中
5 = 正中
6 = 右中
7 = 左下
8 = 中下
9 = 右下
** 72
标注文字行距样式（可选）：
1（或缺少）= 至少（将替代为较高的字符）
2 = 精确（将不替代为较高的字符）
** 41
标注文字行距比例（可选）：
要应用的行距的默认百分比（五分之三）。有效值的范围从 0.25 到 4.00
** 42
实际测量结果（可选；只读值）
** 1
由用户明确输入的标注文字。可选；默认值为测量结果。如果为空或为“<>”，标注测量结果将绘制为文字；如果为“ ”（一个空格），文字将被抑制。其他内容绘制为文字
** 53
可选组码 53 是标注文字与其默认方向所成的旋转角度（尺寸线方向）（可选）
** 51
所有标注类型均有可选的 51 组码，表示标注图元的水平方向。标注图元决定水平、垂直和旋转线性标注的标注文字和直线的方向
该组值是 OCS X 轴和 UCS X 轴之间的负角度。它始终位于 OCS 的 XY 平面上
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 3
标注样式名
* ELLIPSE, 椭圆
** 100
子类标记 (AcDbEllipse)
** 10
中心点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：中心点的 Y 值和 Z 值（在 WCS 中）
** 11
相对于中心的长轴端点（在 WCS 中）
DXF：X 值；APP：三维点
** 21, 31
DXF：相对于中心的长轴端点的 Y 值和 Z 值（在 WCS 中）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 40
短轴与长轴的比例
** 41
起点参数 （对于闭合椭圆，该值为 0.0）
** 42
端点参数 （对于闭合椭圆，该值为 2pi）
* HATCH, 填充
=dxfhatch边界路径数据=
=dxfhatch图案数据=
hatch 填充 dxf 数据较多，无法全部输出显示，分为以下4部分：
=dxfhatch-part1=
=dxfhatch-part2=
=dxfhatch-part3=
=dxfhatch-part4=
* hatch-part1
** 100
子类标记 (AcDbHatch)
** 10
标高点（在 OCS 中）
DXF：X 值 = 0；APP：三维点（X 和 Y 始终等于 0，Z 表示标高）
** 20, 30
DXF：标高点的 Y 值和 Z 值（在 OCS 中）
Y 值 = 0，Z 表示标高
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值
** 2
填充图案名
** 70
实体填充标志（0 = 图案填充；1 = 实体填充）；对于 MPolygon，为 Mpolygon 的版本
** 63
对于 Mpolygon，图案填充颜色为 ACI
* hatch-part2
** 71
关联性标志（0 = 无关联；1 = 关联）；对于 Mpolygon，为实体填充标志（0 = 无实体填充；1 = 有实体填充）
** 91
边界路径（环）数
** 多种
边界路径数据。重复代码 91 指定的次数。请参见“边界路径数据”
** 75
图案填充样式：
0 = 对“奇数奇偶校验”区域进行图案填充（普通样式）
1 = 仅对最外层区域进行图案填充（“外部”样式）
2 = 对整个区域进行图案填充（“忽略”样式）
** 76
填充图案类型：
0 = 用户定义
1 = 预定义
2 = 自定义
** 52
填充图案角度（仅限图案填充）
** 41
填充图案比例或间距（仅限图案填充）
** 73
对于 Mpolygon，为边界注释标志：
0 = 边界不是注释边界
1 = 边界是注释边界
** 77
填充图案双向标志（仅限图案填充）：
0 = 非双向标志
1 = 双向标志
* hatch-part3
** 78
图案定义直线数
** 多种
图案直线数据。代码 78 指定的重复次数。请参见“图案数据”
** 47
在相关图案填充和使用图案填充的“填充”方法创建的图案填充的填充图案计算中，用于确定执行各种相交和射线法操作的密度的像素大小。
** 98
种子点数
** 11
对于 MPolygon，为偏移矢量
** 99
对于 MPolygon，为退化边界路径（环）数（退化边界路径是图案填充忽略的边框）
** 10
种子点（在 OCS 中）
DXF：X 值；APP：二维点（多个条目）
** 20
DXF：种子点的 Y 值（在 OCS 中）；（多个条目)
* hatch-part4
** 450
表示实体图案填充或渐变色；如果是实体图案填充，则剩余代码的值将被忽略，但必须存在。可选；如果代码 450 在文件中，下列代码也必须在文件中：451、452、453、460、461、462 和 470。如果代码 450 不在文件中，下列代码也必须不在文件中：451、452、453、460、461、462 和 470
0 = 实体图案填充
1 = 渐变色
** 451
保留零供以后使用
452
记录定义颜色的方法，仅用于对话框代码：
0 = 双色渐变色
1 = 单色渐变色
** 453
颜色数：
0 = 实体图案填充
2 = 渐变色
** 460
以弧度表示的渐变色的旋转角度（默认值 = 0, 0）
** 461
渐变色定义；对应于“边界图案填充”对话框“渐变色”选项卡中的“居中”选项。每个渐变色有两个定义：移动和非移动。“移动”值描述了应使用的两种定义的过渡。值 0.0 表示应仅使用非移动版本，值 1.0 表示应仅使用移动版本。
** 462
对话框代码使用的色调值（默认值 = 0, 0；范围从 0.0 到 1.0）。色调值是一个渐变色，用于当图案填充组码 452 设定为 1 时，控制对话框中的色调度。
** 463
保留供以后使用：
0 = 第一个值
1 = 第二个值
** 470
字符串（默认值 = 线性）
* hatch边界路径数据
每个图案填充对象的边界由包含一条或多条线段的路径（或环）定义。路径线段数据取决于构成路径的图元类型。每条路径线段由它自己的组码集定义。
=dxfhatch图案填充边=
=dxfhatch多段线=
=dxfhatch直线边=
=dxfhatch圆弧边=
=dxfhatch椭圆边=
=dxfhatch样条曲线边=
* hatch图案填充边
** 92
边界路径类型标志（按位编码）：
0 = 默认
1 = 外部
2 = 多段线
4 = 导出
8 = 文本框
16 = 最外层
多种
多段线边界类型数据（仅当边界 = 多段线时）。参见下面的多段线边界数据表
** 93
该边界路径中的边数（仅当边界不是多段线时）
** 72
边类型（仅当边界不是多段线时）：
1 = 直线
2 = 圆弧
3 = 椭圆弧
4 = 样条曲线
多种
边类型数据（仅当边界不是多段线时）。参见下面的相应边数据表
** 97
源边界对象数
** 330
源边界对象的参照（多个条目）
* hatch多段线
** 72
“有凸度”标志
** 73
“关闭”标志
** 93
多段线顶点数
** 10
顶点位置（在 OCS 中）
DXF：X 值；APP：二维点（多个条目）
** 20
DXF：顶点位置的 Y 值（在 OCS 中）（多个条目）
** 42
凸度（可选；默认值 = 0）
* hatch直线边
** 10
起点（在 OCS 中）
DXF：X 值；APP：二维点
** 20
DXF：起点的 Y 值（在 OCS 中）
** 11
端点（在 OCS 中）
DXF：X 值；APP：二维点
** 21
DXF：端点的 Y 值（在 OCS 中）
* hatch圆弧边
** 10
中心点（在 OCS 中）
DXF：X 值；APP：二维点
** 20
DXF：中心点的 Y 值（在 OCS 中）
** 40
半径
** 50
起点角度
** 51
端点角度
** 73
“逆时针”标志
* hatch椭圆边
** 10
中心点（在 OCS 中）
DXF：X 值；APP：二维点
** 20
DXF：中心点的 Y 值（在 OCS 中）
** 11
相对于中心点的长轴端点（在 OCS 中）
DXF：X 值；APP：二维点
** 21
DXF：长轴端点的 Y 值（在 OCS 中）
** 40
短轴的长度（占长轴长度的比例）
** 50
起点角度
** 51
端点角度
** 73
“逆时针”标志
* hatch样条曲线边
** 94
阶数
** 73
有理
** 74
周期
** 95
节点数
** 96
控制点数
** 40
节点值（多个条目）
** 10
控制点（在 OCS 中）
DXF：X 值；APP：二维点
** 20
DXF：控制点的 Y 值（在 OCS 中）
** 42
权值（可选；默认值 = 1）
** 97
拟合数据数目
** 11
拟合基准（在 OCS 中）
DXF：X 值；APP：二维点
** 21
DXF：拟合基准的 Y 值（在 OCS 中）
** 12
起点切向
DXF：X 值；APP：二维矢量
** 22
DXF：起点切向的 Y 值（在 OCS 中）
** 13
端点切向
DXF：X 值；APP：二维矢量
** 23
DXF：端点切向的 Y 值（在 OCS 中）
* hatch图案数据
各图案定义行重复使用以下图案数据代码。
** 53
图案直线角度
** 43
图案直线基点，X 分量
** 44
图案直线基点，Y 分量
** 45
图案直线偏移，X 分量
** 46
图案直线偏移，Y 分量
** 79
虚线长度项目数
** 49
虚线长度（多个条目）
* HELIX
样条曲线数据
** 100
子类标记 (AcDbHelix)
** 90
主版本号
** 91
维护版本号
10, 20, 30
轴基点
11, 21, 31
起点
** 12, 22, 32
轴矢量
** 40
半径
** 41
圈数
** 42
圈高
** 290
左右手习惯：
0 = 左手
1 = 右手
** 280
约束类型：
0 = 约束圈高
1 = 约束圈数
2 = 约束高度
* IMAGE, 图像
** 100
子类标记 (AcDbRasterImage)
** 90
类版本
** 10
插入点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：插入点的 Y 值和 Z 值（在 WCS 中）
** 11
单像素的 U 矢量（沿图像可见底部的点，从插入点开始）（在 WCS 中）
DXF：X 值；APP：三维点
** 21, 31
DXF：U 矢量的 Y 值和 Z 值（在 WCS 中）
** 12
单像素的 V 矢量（沿图像可见左侧的点，从插入点开始）（在 WCS 中）
DXF：X 值；APP：三维点
** 22, 32
DXF：V 矢量的 Y 值和 Z 值（在 WCS 中）
** 13
图像大小（像素）
DXF：U 值；APP：二维点（U 值和 V 值）
** 23
DXF：图像大小（像素）的 V 值
** 340
imagedef 对象的硬参照
** 70
图像显示特性：
1 = 显示图像
2 = 当与屏幕不对齐时显示图像
4 = 使用剪裁边界
8 = 透明度打开
** 280
剪裁状态：
0 = 关闭
1 = 打开
** 281
亮度值（0-100；默认值 = 50）
** 282
对比度值（0-100；默认值 = 50）
** 283
淡入度值（0-100；默认值 = 0）
** 360
imagedef_reactor 对象的硬参照
** 71
剪裁边界类型。1 = 矩形；2 = 多边形
** 91
后面的裁剪边界顶点数
** 14
裁剪边界顶点（在 OCS 中）
DXF：X 值；APP：二维点（多个条目）
注意 1) 对于矩形剪裁边界类型，必须指定两个对角点。默认值为 (-0.5,-0.5)，(size.x-0.5,size.y-0.5)。2) 对于多边形剪裁边界类型，必须指定三个或更多顶点。多边形顶点必须按顺序列出
** 24
DXF：剪裁边界顶点的 Y 值（在 OCS 中）（多个条目）
** 290
剪裁模式：
0 = 外部模式
1 = 内部模式
* INSERT, 块引用, 块参照
** 100
子类标记 (AcDbBlockReference)
** 66
可变属性跟随标志（可选；默认值 = 0）；如果属性跟随标志的值为 1，则跟随插入的将是一系列属性图元，并以一个 seqend 图元终止
** 2
块名
** 10
插入点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：插入点的 Y 值和 Z 值（在 OCS 中）
** 41
X 缩放比例（可选；默认值 = 1）
** 42
Y 缩放比例（可选；默认值 = 1）
** 43
Z 缩放比例（可选；默认值 = 1）
** 50
旋转角度（可选；默认值 = 0）
** 70
列计数（可选；默认值 = 1）
** 71
行计数（可选；默认值 = 1）
** 44
列间距（可选；默认值 = 0）
** 45
行间距（可选；默认值 = 0）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* LEADER, 引线
** 100
子类标记 (AcDbLeader)
** 3
标注样式名
** 71
箭头标志：0 = 禁用；1 = 启用
** 72
引线路径类型：0 = 直线段；1 = 样条曲线
** 73
引线创建标志（默认值 = 3）：
0 = 使用文字注释创建
1 = 使用公差注释创建
2 = 使用块参照注释创建
3 = 不使用任何注释创建
** 74
基线方向标志：
0 = 基线（或样条曲线引线的切线端）与水平矢量的方向相反
1 = 基线（或样条曲线引线的切线端）与水平矢量的方向相同（参见代码 75）
** 75
基线标志：
0 = 无基线
1 = 有基线
** 40
文字注释高度
** 41
文字注释宽度
** 76
引线顶点数（如果为 OPEN，则忽略）
** 10
顶点坐标（每个顶点一个条目）
DXF：X 值；APP：三维点
** 20, 30
DXF：顶点坐标的 Y 值和 Z 值
** 77
引线的 DIMCLRD = BYBLOCK时使用的颜色
** 340
相关注释的硬参照（多行文字、公差或插入图元）
** 210
法向矢量
DXF：X 值；APP：三维矢量
** 220, 230
DXF：法向矢量的 Y 值和 Z 值
** 211
引线的“水平”方向
DXF：X 值；APP：三维矢量
** 221, 231
DXF：引线的“水平”方向的 Y 值和 Z 值
** 212
上一个引线顶点距块参照插入点的偏移
DXF：X 值；APP：三维矢量
** 222, 232
DXF：偏移的 Y 值和 Z 值
** 213
上一个引线定点距注释位置点的偏移
DXF：X 值；APP：三维矢量
** 223, 233
DXF：偏移的 Y 值和 Z 值
* LIGHT, 灯光
** 100
子类标记 (AcDbLight)
** 90
版本号
** 1
光源名称
** 70
光源类型：
1 = 平行光
2 = 点光源
3 = 聚光灯
** 290
状态
** 291
打印轮廓
** 40
强度
** 10
光源位置
DXF：X 值；APP：三维点
** 20, 30
DXF：光源位置的 X、 Y 和 Z 值
** 11
目标位置
DXF：X 值；APP：三维点
** 21, 31
DXF：目标位置的 X、 Y 和 Z 值
** 72
衰减类型：
0 = 无
1 = 线性反比
2 = 平方反比
** 292
使用衰减界限
** 41
衰减起点界限
** 42
衰减端点界限
** 50
聚光角角度
** 51
照射角角度
** 293
投射阴影
** 73
阴影类型
0 = 光线跟踪阴影
1 = 阴影贴图
** 91
阴影贴图尺寸
** 280
阴影贴图柔和度
* LINE, 线
** 100
子类标记 (AcDbLine)
** 39
厚度（可选；默认值 = 0）
** 10
起点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：起点的 Y 值和 Z 值（在 WCS 中）
** 11
端点（在 WCS 中）
DXF：X 值；APP：三维点
** 21, 31
DXF：端点的 Y 值和 Z 值（在 WCS 中）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* LWPOLYLINE, 多段线
** 100
子类标记 (AcDbPolyline)
** 90
顶点数
** 70
多段线标志（按位编码）；默认值为 0：
1 = 关闭；128 = Plinegen
** 43
固定宽度（可选；默认值 = 0）。如果设定为可变宽度（代码 40 和/或 41），则不使用
** 38
标高（可选；默认值 = 0）
** 39
厚度（可选；默认值 = 0）
** 10
顶点坐标（在 OCS 中），多个条目；每个顶点一个条目
DXF：X 值；APP：二维点
** 20
DXF：顶点坐标的 Y 值（在 OCS 中），多个条目；每个顶点一个条目
** 91
顶点标识符
** 40
起点宽度（多个条目；每个顶点一个条目）（可选；默认值 = 0；多个条目）。如果设定为固定宽度（代码 43），则不使用
** 41
端点宽度（多个条目；每个顶点一个条目）（可选；默认值 = 0；多个条目）。如果设定为固定宽度（代码 43），则不使用
** 42
凸度（多个条目；每个顶点一个条目）（可选；默认值 = 0）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* mesh, 网格
** 100
子类标记 (AcDbSubDMesh)
** 71	
版本号
** 72
“光顺锐化”特性
0 = 关闭
1 = 打开
** 91
细分级别数目
** 92
0 级顶点数
** 10
顶点位置
** 93
0 级面列表的大小
** 90
面列表项目
** 94
0 级边数
** 90
每条边的顶点索引
** 95
0 级边锐化数
** 140
边创建值
** 90
特性已被替代的子图元数
** 91
子图元标记
** 92
已替代特性数
** 90
特性类型
0 = 颜色
1 = 材质
2 = 透明度
3 = 材质贴图器
* MLEADER, 多重引线
** 340	引线样式 ID
** 90	特性替代标志
** 170	引线类型
** 91	引线颜色
** 341	引线类型 ID
** 171	引线线宽
** 290	启用基线
** 291	启用基线
** 41	基线长度
** 342	箭头 ID
** 42	箭头大小
** 172	内容类型
** 343	文字样式 ID
** 173	文字左附着样式
** 95	文字右附着类型
** 174	文字角度类型
** 175	文字对齐类型
** 92	文字颜色
** 292	启用文字边框
** 344	块内容 ID
** 93	块内容颜色
** 10	块内容比例
** 43	块内容旋转
** 176	块内容连接类型
** 293	启用注释比例
** 94	箭头索引
** 345	箭头 ID
** 330	块属性 ID
** 177	块属性索引
** 44	块属性宽度
** 302	块属性文字字符串
** 294	文字负方向
** 178	IPE 中的文字对齐
** 179	文字附着点
** 271
多行文字内容的文字附着方向：
0 = 水平
1 = 垂直
** 272
底部文字附着方向：
9 = 居中
10 = 下划线并居中
** 273
顶部文字附着方向：
9 = 居中
10 = 上划线并居中
* MLEADERSTYLE,多重引线样式
** 170
内容类型
** 171	绘制多重引线次序类型
** 172	绘制引线次序类型
** 90	最大引线线段点
** 40	第一线段角度约束
** 41	第二线段角度约束
** 173	引线类型
** 91	引线颜色
** 340	引线类型 ID
** 92	引线线宽
** 290	启用基线
** 42	基线间隙
** 291	启用基线
** 43	基线长度
** 3	多重引线样式说明
** 341	箭头 ID
** 44	箭头大小
** 300	默认多行文字内容
** 342
多行文字样式 ID
** 174
文字左附着样式
** 175
文字角度类型
** 176	文字对齐类型
** 178	文字连接位置类型 - 右
** 93	文字颜色
** 45	文字高度
** 292	启用文字边框
** 297	文字始终左对齐
** 46	对齐空间
** 343	块内容 ID
** 94	块内容颜色
** 47	X 轴上的块内容比例
** 49	Y 轴上的块内容比例
** 140	Z 轴上的块内容比例
** 293	启用块内容比例
** 141	块内容旋转
** 294	启用块内容旋转
** 177	块内容连接类型
** 142	比例
** 295	覆盖特性值
** 296	注释性
** 143	打断间距大小
** 271
多行文字内容的文字附着方向：
0 = 水平
1 = 垂直
** 272
底部文字附着方向：
9 = 居中
10 = 下划线并居中
** 273
顶部文字附着方向：
9 = 居中
10 = 上划线并居中
* mline, 多线
** 100
子类标记 (AcDbMline)
** 2
最大长度为 32 个字符的字符串。该多线使用的样式名。MLINESTYLE 词典中必须存在此样式的条目。
如果不同时更新 MLINESTYLE 词典中的相关条目，则不要修改该字段。
** 340
MLINESTYLE 对象的指针句柄/ID
** 40
比例因子
** 70
对正：
0 = 顶端对正
1 = 无对正
2 = 底端对正
** 71
标志（按位编码值）：
1 = 至少有一个顶点（代码 72 大于 0）
2 = 关闭
4 = 禁止起点封口
8 = 禁止端点封口
** 72
顶点数
** 73
MLINESTYLE 定义中的元素数
** 10
起点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：起点的 Y 值和 Z 值（在 WCS 中）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 11
顶点坐标（多个条目；每个顶点一个条目）DXF：X 值；APP：三维点
** 21, 31
DXF：顶点坐标的 Y 值和 Z 值
** 12
从该顶点开始的线段的方向矢量（多个条目；每个顶点一个条目）
DXF：X 值；APP：三维矢量
** 22, 32
DXF：从此顶点开始的线段的方向矢量的 Y 值和 Z 值
** 13
此顶点处的斜接方向矢量（多个条目；每个顶点一个条目）
DXF：X 值；APP：三维矢量
** 23, 33
DXF：斜接方向矢量的 Y 值和 Z 值
** 74
该元素的参数数目（对线段中的每个元素重复）
** 41
元素参数（根据上一个代码 74 重复）
** 75
该元素的区域填充参数的数目（对线段中的每个元素重复）
** 42
区域填充参数（根据前一个代码 75 重复）
* MTEXT, 多行文本
** 100
子类标记 (AcDbMText)
** 10
插入点
DXF：X 值；APP：三维点
** 20, 30
DXF：插入点的 Y 值和 Z 值
** 40
标称（初始）文字高度
** 41
参照矩形宽度
** 71
附着点：
1 = 左上
2 = 中上
3 = 右上
4 = 左中
5 = 正中
6 = 右中
7 = 左下
8 = 中下
9 = 右下
** 72
图形方向：
1 = 从左到右
3 = 从上到下
5 = 随样式（从相关文字样式继承走向）
** 1
字符串。如果字符串长度小于 250 个字符，所有字符均出现在组 1 中。如果字符串长度大于 250 个字符，该字符串将分成长度为 250 个字符的数据块，并显示在一个或多个组 3 代码中。如果使用组 3 代码，最后一个组将是组 1 并且字符数少于 250 个
** 3
附加文字（始终在长度为 250 个字符的数据块中）（可选）
** 7
文字样式名（如果未提供，则为“标准”）（可选）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 11
X 轴方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
将作为 DXF 输入传递的组码 50（以弧度为单位的旋转角）转换为相等的方向矢量（如果同时传递代码 50 和代码 11、21、31，则对最后一个代码进行转换）。这是从文字对象转换的一种简便方法。
** 21, 31
DXF：X 轴方向矢量的 Y 值和 Z 值（在 WCS 中）
** 42
构成多行文字图元的字符的水平宽度。该值始终等于或小于组码 41 的值（只读，如果提供则忽略）
** 43
多行文字图元的垂直高度（只读，如果提供则忽略）
** 50
以弧度为单位的旋转角度
** 73
多行文字的行距样式（可选）：
1= 至少（将替代为较高的字符）
2 = 精确（将不替代为较高的字符）
** 44
多行文字的行距比例（可选）：
要应用的行距的默认百分比（五分之三）。有效值的范围从 0.25 到 4.00
** 90
背景填充设置：
0 = 背景填充关闭
1 = 使用背景填充颜色
2 = 使用图形窗口颜色作为背景填充颜色
** 420 - 429
背景色（RGB 颜色）
** 430 - 439
背景色（颜色名）
** 45
填充框大小（可选）：
确定文字周围的边框大小。
** 63
背景填充颜色（可选）：
组码 90 为 1 时要用于背景填充的颜色。
** 441
背景填充颜色的透明度（未实现）
** 75
列类型
** 76	列计数
** 78	反转列走向
** 79	列自动高度
** 48	列宽
** 49	列栏间距
** 50	列高度；此代码后跟列计数 (Int16)，然后是列高度数
* oleframe
** 100
子类标记 (AcDbOleFrame)
** 70
OLE 版本号
** 90
二进制数据的长度
** 310
二进制数据（多行）
** 1
OLE 数据的结束（字符串“OLE”）
* ole2frame
** 100
子类标记 (AcDbOle2Frame)
** 70
OLE 版本号
** 3
二进制数据的长度
** 10
左上角 (WCS)
DXF：X 值；APP：三维点
** 20, 30
DXF：左上角的 Y 值和 Z 值（在 WCS 中）
** 11
右下角 (WCS)
DXF：X 值；APP：三维点
** 21, 31
DXF：右下角的 Y 值和 Z 值（在 WCS 中）
** 71
OLE 对象类型，1 = 链接；2 = 嵌入；3 = 静态
** 72
平铺模式描述符：
0 = 对象驻留在模型空间中
1 = 对象驻留在图纸空间中
** 90
二进制数据的长度
** 310
二进制数据（多行）
** 1
OLE 数据的结束（字符串“OLE”）
* point,点
** 100
子类标记 (AcDbPoint)
** 10
点位置（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：点位置的 Y 值和 Z 值（在 WCS 中）
** 39
厚度（可选；默认值 = 0）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 50
绘制点时所使用的 UCS 的 X 轴的角度（可选；默认值 = 0）；当 PDMODE 非零时使用
* polyline,三维多段线
** 100
子类标记（AcDb2dPolyline 或 AcDb3dPolyline）
** 66
已废弃；以前是“后跟图元标志”（可选；如果存在则忽略）
** 10
DXF：始终为 0
APP：“虚拟”点；X 值和 Y 值始终为 0，Z 值是多段线的标高（二维时在 OCS 中，三维时在 WCS 中）
** 20
DXF：始终为 0
** 30
DXF：多段线的标高（二维时在 OCS 中，三维时在 WCS 中）
** 39
厚度（可选；默认值 = 0）
** 70
多段线标志（按位编码；默认值 = 0）：
1 = 这是一个闭合多段线（或按 M 方向闭合的多边形网格）
2 = 已添加曲线拟合顶点
4 = 已添加样条曲线拟合顶点
8 = 这是一条三维多段线
16 = 这是一个三维多边形网格
32 = 多边形网格以 N 方向闭合
64 = 多段线是一个多面网格
128 = 线型图案在该多段线顶点的周围连续生成
** 40
默认起点宽度（可选；默认值 = 0）
** 41
默认端点宽度（可选；默认值 = 0）
** 71
多边形网格 M 顶点计数（可选；默认值 = 0）
** 72
多边形网格 N 顶点计数（可选；默认值 = 0）
** 73
平滑曲面 M 密度（可选；默认值 = 0）
** 74
平滑曲面 N 密度（可选；默认值 = 0）
** 75
曲线和平滑曲面类型（可选；默认值 = 0）；整数代码，非按位编码：
0 = 不拟合平滑曲面
5 = 二次 B 样条曲面
6 = 三次 B 样条曲面
8 = Bezier 曲面
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* ray
** 100
子类标记 (AcDbRay)
** 10
起点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：起点的 Y 值和 Z 值（在 WCS 中）
** 11
单位方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21, 31
DXF：单位方向矢量的 Y 值和 Z 值（在 WCS 中）
* region
** 100
子类标记 (AcDbModelerGeometry)
** 70
建模格式版本号（当前值 = 1）
** 1
所有权数据（多行，每行 < 255 个字符）
** 3
所有权数据的附加行（如果前一个组 1 的字符串长度大于 255 个字符）（可选）
* section
** 100
子类标记 (AcDbSection)
** 90
截面状态
** 91
截面标志
** 1
名称
** 10, 20, 30
垂直方向
** 40
顶部高度
** 41
底部高度
** 70
指示器透明度
** 63, 411
指示器颜色
** 92
顶点数
** 11, 21, 31
顶点（根据顶点数重复）
** 93
背面线顶点数
** 12, 22, 32
背面线顶点（根据背面线顶点数重复）
** 360
几何图形设置对象的硬指针 ID/句柄
* seqend
**  -2
APP：开始序列的图元的名称。该图元标记多段线顶点的结束（顶点类型名），或具有属性（由插入图元中出现的非零 66 组表示）的插入图元的属性图元的结束（属性类型名）。该代码不保存在 DXF 文件中。
* shape
** 100
子类标记 (AcDbShape)
** 39
厚度（可选；默认值 = 0）
** 10
插入点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：插入点的 Y 值和 Z 值（在 WCS 中）
** 40
大小
** 2
形名称
** 50
旋转角度（可选；默认值 = 0）
** 41
X 相对缩放比例（可选；默认值 = 1）
** 51
倾斜角（可选；默认值 = 0）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* solid,实体
** 100
子类标记 (AcDbTrace)
** 10
第一角点
DXF：X 值；APP：三维点
** 20, 30
DXF：第一角点的 Y 值和 Z 值
** 11
第二角点
DXF：X 值；APP：三维点
** 21, 31
DXF：第二角点的 Y 值和 Z 值
** 12
第三角点
DXF：X 值；APP：三维点
** 22, 32
DXF：第三角点的 Y 值和 Z 值
** 13
第四角点。如果只输入三个角点来定义 SOLID，则第四个角点坐标与第三个角点坐标相同。
DXF：X 值；APP：三维点
** 23, 33
DXF：第四角点的 Y 值和 Z 值
** 39
厚度（可选；默认值 = 0）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* spline,样条曲线
** 100
子类标记 (AcDbSpline)
** 210
法向矢量（如果样条曲线为非平面型，则省略）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：法向矢量的 Y 值和 Z 值（可选）
** 70
样条曲线标志（按位编码）：
1 = 闭合样条曲线
2 = 周期性样条曲线
4 = 有理样条曲线
8 = 平面
16 = 线性（同时还设置平面位）
71
样条曲线的阶数
** 72
节点数
** 73
控制点数
** 74
拟合点数（如果有）
** 42
节点公差（默认值 = 0.0000001）
** 43
控制点公差（默认值 = 0.0000001）
** 44
拟合公差（默认值 = 0.0000000001）
** 12
起点切向 — 可以省略（在 WCS 中）
DXF：X 值；APP：三维点
** 22, 32
DXF：起点切向的 Y 值和 Z 值 — 可以省略（在 WCS 中）
** 13
端点切向 — 可以省略（在 WCS 中）
DXF：X 值；APP：三维点
** 23, 33
DXF：端点切向的 Y 值和 Z 值 — 可以省略（在 WCS 中）
** 40
节点值（每个节点一个条目）
** 41
权值（如果不为 1）；对于多组对，如果均不为 1，则出现。
** 10
控制点（在 WCS 中）；每个控制点一个条目
DXF：X 值；APP：三维点
** 20, 30
DXF：控制点的 Y 值和 Z 值（在 WCS 中）；每个控制点一个条目
** 11
拟合点（在 WCS 中）；每个拟合点一个条目
DXF：X 值；APP：三维点
** 21, 31
DXF：拟合点的 Y 值和 Z 值（在 WCS 中）；每个拟合点一个条目
* sun,阳光
** 100
子类标记 (AcDbSun)
** 90
版本号
** 290
状态
** 63
颜色
** 40
强度
** 291
阴影
** 91
公历日期
** 92
时间（以午夜过后的秒数表示）
** 292
夏令时时间
** 70
阴影类型
0 = 光线跟踪阴影
1 = 阴影贴图
** 71
阴影贴图尺寸
** 280
阴影柔和度
* surface,表面
** 100
子类标记 (AcDbModelerGeometry)
** 70
建模格式版本号（当前值 = 1）
** 1
所有权数据（多行，每行 < 255 个字符）
** 3
所有权数据的附加行（如果前一个组 1 的字符串长度大于 255 个字符）（可选）
** 100
子类标记 (AcDbSurface)
** 71
U 素线数
** 72
V 素线数
* table,表格
** 0
图元名 (ACAD_TABLE)
** 5
图元句柄
** 330
所有者词典的软指针 ID
** 100
子类标记。(AcDbEntity)
** 92
代理图元图形中的字节数
** 310
代理图元图形的数据（多行；每行最多 256 个字符）
** 100
子类标记。(AcDbBlockReference)
** 2
块名；无名块以 *T 值开始
** 10,20,30
插入点
** 100
子类标记。(AcDbTable)
** 280
表格数据版本号：
** 0 = 2010
** 342
TABLESTYLE 对象的硬指针 ID
** 343
属主 BLOCK 记录的硬指针 ID
** 11,21,31
水平方向矢量
** 90
标志的标志（无符号整数）
** 91
行数
** 92
列数
** 93
替代的标志
** 94
边框颜色的替代的标志
** 95
边框线宽的替代的标志
** 96
边框可见性的替代的标志
** 141
行高；此值不断重复，每行值为 1
** 142
列高；此值不断重复，每列值为 1
** 171
单元类型；此值不断重复，每单元值为 1：
1 = 文字类型
2 = 块类型
** 172
单元标志值；此值不断重复，每单元值为 1
** 173
单元合并值；此值不断重复，每单元值为 1
** 174
布尔标志指示是否为单元设定自动调整选项；此值不断重复，每单元值为 1
** 175
单元边框宽度（仅适用于合并单元）；此值不断重复，每单元值为 1
** 176
单元边框高度（适用于合并单元）；此值不断重复，每单元值为 1
** 91
单元替代标志；此值不断重复，每单元值为 1（自 AutoCAD 2007 开始）
** 178
虚拟边的标志值
** 145
旋转角度值（实数；适用于块类型单元和文字类型单元）
** 344
FIELD 对象的硬指针 ID此 ID 仅适用于文字类型单元。如果单元中的文字包含一个或多个字段，则仅保存 FIELD 对象的 ID。忽略文字字符串（组码 1 和 3）
** 1
单元中的文字字符串。如果字符串长度小于 250 个字符，所有字符均显示在代码 1 中。如果字符串长度大于 250 个字符，该字符串将分成长度为 250 个字符的数据块。这些数据块将包含在一个或多个代码 2 代码中。如果使用代码 2 代码，最后一个组将为代码 1 并且长度小于 250 个字符。此值仅适用于文字类型单元并不断重复，每单元值为 1
** 2	
单元中的文字字符串，在长度为 250 个字符的数据块中；可选。此值仅适用于文字类型单元并不断重复，每单元值为 1
** 340
块表记录的硬指针 ID。此值仅适用于块类型单元并不断重复，每单元值为 1
** 144
块的缩放比例（实数）。此值仅适用于块类型单元并不断重复，每单元值为 1
** 179
块表记录中的属性定义数（仅适用于块类型单元）
** 331
块表记录中属性定义的软指针 ID，由组码 179 参照（仅适用于块类型单元）。每出现一个属性定义此值便重复一次
** 300
属性定义的文字字符串值，每出现一个属性定义便重复一次并仅适用于块类型单元
** 7
文字样式名（字符串）；应用于单元级别的替代
** 140
文字高度值；应用于单元级别的替代
** 170
单元对齐值；应用于单元级别的替代
** 64
单元内容的颜色值；应用于单元级别的替代
** 63
单元内容的背景（填充）色的值；应用于单元级别的替代
** 69
单元上边框的真彩色值；应用于单元级别的替代
** 65
单元右边框的真彩色值；应用于单元级别的替代
** 66
单元下边框的真彩色值；应用于单元级别的替代
** 68
单元左边框的真彩色值；应用于单元级别的替代
** 279
单元上边框的线宽；应用于单元级别的替代
** 275
单元右边框的线宽；应用于单元级别的替代
** 276
单元下边框的线宽；应用于单元级别的替代
** 278
单元左边框的线宽；应用于单元级别的替代
** 283
是否打开填充颜色的布尔标志；应用于单元级别的替代
** 289
单元上边框可见性的布尔标志；应用于单元级别的替代
** 285
单元右边框可见性的布尔标志；应用于单元级别的替代
** 286
单元下边框可见性的布尔标志；应用于单元级别的替代
** 288
单元左边框可见性的布尔标志；应用于单元级别的替代
** 70
流向；应用于表图元级别的替代
** 40
水平单元边距；应用于表图元级别的替代
** 41
垂直单元边距；应用于表图元级别的替代
** 280
是否抑制标题的标志；应用于表图元级别的替代
** 281
是否抑制标题行的标志；应用于表图元级别的替代
** 7
文字样式名（字符串）；应用于表图元级别的替代。每个单元类型可能有一个条目
** 140
文字高度（实数）；应用于表图元级别的替代。每个单元类型可能有一个条目
** 170
单元对齐（整数）；应用于表图元级别的替代。每个单元类型可能有一个条目
** 63
表的垂直左边框或单元背景的颜色值；应用于表图元级别的替代。每个单元类型可能有一个条目
** 64
表的水平上边框或单元内容的颜色值；应用于表图元级别的替代。每个单元类型可能有一个条目
** 65
水平内部边框线的颜色值；应用于表图元级别的替代
** 66
水平下边框线的颜色值；应用于表图元级别的替代
** 68
垂直内部边框线的颜色值；应用于表图元级别的替代
** 69
垂直右边框线的颜色值；应用于表图元级别的替代
** 283
是否启用背景色的标志（默认值 = 0）；应用于表图元级别的替代。每个单元类型可能有一个条目：
0 = 禁用
1 = 启用
** 274-279
每个单元边框类型的线宽（默认值 = kLnWtByBlock）；应用于表图元级别的替代。每个单元类型可能有一个组
** 284-289
每个单元边框类型的可见性标志（默认值 = 1）；应用于表图元级别的替代。每个单元类型可能有一个组：
0 = 不可见
1 = 可见
** 97
标准/标题/表头行数据类型
** 98
标准/标题/表头行单位类型
** 4
标准/标题/表头行格式字符串
** 177
单元替代标志值（AutoCAD 2007 之前）
** 92
延伸单元标志（自 AutoCAD 2007 开始）
** 301	单元值块开始（自 AutoCAD 2007 开始）
** 302	
单元中的文字字符串。如果字符串长度小于 250 个字符，则所有字符均显示在代码 302 中。如果字符串长度大于 250 个字符，该字符串将分成长度为 250 个字符的数据块。这些数据块将包含在一个或多个代码 303 代码中。如果使用代码 393 代码，则最后一个组将为代码 1 并且长度小于 250 个字符。此值仅适用于文字类型单元并不断重复，每单元值为 1（自 AutoCAD 2007 开始）
** 303	
单元中的文字字符串，在长度为 250 个字符的数据块中；可选。此值仅适用于文字类型单元并不断重复，每单元值为 302（自 AutoCAD 2007 开始）
* text,文本
** 100
子类标记 (AcDbText)
** 39
厚度（可选；默认值 = 0）
** 10
第一对齐点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：第一对齐点的 Y 值和 Z 值（在 OCS 中）
** 40
文字高度
** 1
默认值（字符串本身）
** 50
文字旋转角度（可选；默认值 = 0）
** 41
相对 X 比例因子 — 宽度（可选；默认值 = 1）
使用拟合类型的文字时，该值也将进行调整。
** 51
倾斜角（可选；默认值 = 0）
** 7
文字样式名（可选；默认值 = 标准）
** 71
文字生成标志（可选；默认值 = 0）：
2 = 文字反向（在 X 轴方向镜像）
4 = 文字倒置（在 Y 轴方向镜像）
** 72
文字水平对正类型（可选；默认值 = 0）整数代码（非按位编码）：
0 = 左对正
1 = 居中对正
2 = 右对正
3 = 对齐（如果垂直对齐 = 0）
4 = 中间（如果垂直对齐 = 0）
5 = 拟合（如果垂直对齐 = 0）
详细信息请参见组 72 和 73 整数代码表
** 11
第二对齐点（在 OCS 中）（可选）
DXF：X 值；APP：三维点
只有当 72 或 73 组的值非零时，该值才有意义（如果对正不是基线对正/左对正）
** 21, 31
DXF：第二对齐点的 Y 值和 Z 值（在 OCS 中）（可选）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 100
子类标记 (AcDbText)
** 73
文字垂直对正类型（可选；默认值 = 0）整数代码（不是按位编码）
0 = 基线对正
1 = 底端对正
2 = 居中对正
3 = 顶端对正
详细信息请参见组 72 和 73 整数代码表
* tolerance
** 100
子类标记 (AcDbFcf)
** 3
标注样式名
** 10
插入点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：插入点的 Y 值和 Z 值（在 WCS 中）
** 1
表示公差的形象化表示的字符串
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
** 11
X 轴方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21, 31
DXF：X 轴方向矢量的 Y 值和 Z 值（在 WCS 中）
* trace
** 100
子类标记 (AcDbTrace)
** 10
第一角点（在 OCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：第一角点的 Y 值和 Z 值（在 OCS 中）
** 11
第二角点（在 OCS 中）
DXF：X 值；APP：三维点
** 21, 31
DXF：第二角点的 Y 值和 Z 值（在 OCS 中）
** 12
第三角点（在 OCS 中）
DXF：X 值；APP：三维点
** 22, 32
DXF：第三角点的 Y 值和 Z 值（在 OCS 中）
** 13
第四角点（在 OCS 中）
DXF：X 值；APP：三维点
** 23, 33
DXF：第四角点的 Y 值和 Z 值（在 OCS 中）
** 39
厚度（可选；默认值 = 0）
** 210
拉伸方向（可选；默认值 = 0, 0, 1）
DXF：X 值；APP：三维矢量
** 220, 230
DXF：拉伸方向的 Y 值和 Z 值（可选）
* underlay
** 0	
对象名称。
DGNUNDERLAY - 附着的 DGN 文件
DWFUNDERLAY - 附着的 DWF 文件
PDFUNDERLAY - 附着的 PDF 文件
** 100
子类标记 (AcDbUnderlayReference)
** 340
AcDbUnderlayDefinition 对象的 ID
** 10,20,30
参考底图插入点的 X、Y 和 Z 坐标。这些是 OCS/ECS 坐标
** 41,42,43
DXF：X、Y 和 Z 比例因子
** 50
旋转角度（在 OCS/ECS 中。从坐标系 X 轴开始绕 Z 轴逆时针旋转）
** 210,220,230
法向矢量（在 WCS 中）
** 280
标志
1 = 剪裁处于打开状态
2 = 参考底图处于打开状态
4 = 单色
8 = 调整背景
16 = 剪裁为内部模式
** 281
对比度（值介于 20 和 100 之间）
** 282
淡入度（值介于 0 和 80 之间）
** 11, 21
重复：OCS/ECS 中的二维点。如果只有两个二维点，则它们就是剪裁矩形的左下角点和右上角点。如果多于两个二维点，则它们就是剪裁多边形的顶点
* vertex,顶点
** 100
子类标记 (AcDbVertex)
** 100
子类标记（AcDb2dVertex 或 AcDb3dPolylineVertex）
** 10
位置点（二维时在 OCS 中，三维时在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：位置点的 Y 值和 Z 值（二维时在 OCS 中，三维时在 WCS 中）
** 40
起点宽度（可选；默认值为 0）
** 41
端点宽度（可选；默认值为 0）
** 42
凸度（可选；默认值为 0）。凸度是四分之一圆弧段角的切线，如果从起点到端点，圆弧为顺时针，则为负数。凸度为 0 表示一条直线段，凸度为 1 表示一个半圆
** 70
顶点标志：
1 = 由曲线拟合创建的额外顶点
2 = 为该顶点定义的曲线拟合切线。如果曲线拟合切线方向为 0，则在 DXF 输出时被省略，但是如果设值了该位，则不能省略
4 = 未使用
8 = 由样条曲线拟合创建的样条曲线顶点
16 = 样条曲线框架控制点
32 = 三维多段线顶点
64 = 三维多边形网格
128 = 多面网格顶点
** 50
曲线拟合切线方向
** 71
多面网格顶点索引（可选；非零时出现）
** 72
多面网格顶点索引（可选；非零时出现）
** 73
多面网格顶点索引（可选；非零时出现）
** 74
多面网格顶点索引（可选；非零时出现）
** 91
顶点标识符
* viewport,视口
** 100
子类标记 (AcDbViewport)
** 10
中心点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：中心点的 Y 值和 Z 值（在 WCS 中）
** 40
宽度，以图纸空间单位为测量单位
** 41
高度，以图纸空间单位为测量单位
** 68
视口状态字段：
-1 = 打开，但是在屏幕上完全不可见，或者因为当前已超出 $MAXACTVP 计数，而成为一个不活动的视口。
0 = 关闭
<正值> = 开并处于活动状态。该值表示视口堆栈的次序，其中 1 是活动视口，下一个是 2，依此类推
** 69
视口 ID
** 12
视口中心点（在 DCS 中）
DXF：X 值；APP：二维点
** 22
DXF：视口中心点的 Y 值（在 DCS 中）
** 13
捕捉基点
DXF：X 值；APP：二维点
** 23
DXF：捕捉基点的 Y 值
** 14
捕捉间距
DXF：X 值；APP：二维点
** 24
DXF：捕捉间距的 Y 值
** 15
栅格间距
DXF：X 值；APP：二维点
** 25
DXF：栅格间距的 Y 值
** 16
观察方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
** 26, 36
DXF：观察方向矢量的 Y 值和 Z 值（在 WCS 中）
** 17
观察目标点（在 WCS 中）
DXF：X 值；APP：三维矢量
** 27, 37
DXF：观察目标点的 Y 值和 Z 值（在 WCS 中）
** 42
透视焦距
** 43
前向剪裁平面的 Z 值
** 44
后向剪裁平面的 Z 值
** 45
视图高度（以模型空间单位为测量单位）
** 50
捕捉角度
** 51
视图扭转角度
** 72
圆的缩放百分比
** 331
冻结图层对象 ID/句柄（可能存在多个条目）（可选）
** 90
视口状态按位编码标志：
1 (0x1) = 启用透视模式
2 (0x2) = 启用前向剪裁
4 (0x4) = 启用后向剪裁
8 (0x8) = 启用 UCS 跟随
16 (0x10) = 如果不可见则启用前向剪裁
32 (0x20) = 启用 UCS 图标可见性
64 (0x40) = 启用 UCS 图标（位于原点）
128 (0x80) = 启用快速缩放
256 (0x100) = 启用捕捉模式
512 (0x200) = 启用栅格模式
1024 (0x400) = 启用等轴测捕捉样式
2048 (0x800) = 启用隐藏打印模式
4096 (0x1000) = kIsoPairTop。如果设定了 kIsoPairTop，但未设定 kIsoPairRight，则启用 isopair top。如果同时设定了 kIsoPairTop 和 kIsoPairRight，则启用 isopair left
8192 (0x2000) = kIsoPairRight。如果设定了 kIsoPairRight，但未设定 kIsoPairTop，则启用 isopair right
16384 (0x4000) = 启用视口缩放锁定
32768 (0x8000) = 当前始终启用
65536 (0x10000) = 启用非矩形剪裁
131072 (0x20000) = 关闭视口
262144 (0x40000) = 启用图形界限外部的栅格的显示
524288 (0x80000) = 启用自适应栅格显示
1048576 (0x100000) = 当栅格显示为自适应时，启用设定的栅格间距下的栅格细分
2097152 (0x200000) = 允许栅格遵循工作平面切换
** 340
用作视口剪裁边界的图元的硬指针 ID/句柄（仅当视口为非矩形时才出现）
** 1
指定给该视口的打印样式表名
** 281
渲染模式：
0 = 二维优化（传统二维）
1 = 线框
2 = 隐藏线
3 = 平面着色
4 = 体着色
5 = 带线框平面着色
6 = 带线框体着色
所有非二维优化渲染模式均使用新三维图形管道。这些值直接与 SHADEMODE 命令和 AcDbAbstractViewTableRecord::RenderMode 枚举相对应
** 71
每个视口标志的 UCS：
0 = 该视口处于活动状态时，UCS 不会改变。
1 = 该视口存储自己的 UCS，只要视口被激活，UCS 将变成当前 UCS。
** 74
在 UCS 原点标志处显示 UCS 图标：
控制 UCS 图标表示视口 UCS 还是当前 UCS（如果 UCSVP 为 1 且视口不活动，则两者存在差别）。但是，该字段当前被忽略，且图标始终表示视口 UCS
** 110
UCS 原点
DXF：X 值；APP：三维点
** 120, 130
DXF：UCS 原点的 Y 值和 Z 值
** 111
UCS X 轴
DXF：X 值；APP：三维矢量
** 121, 131
DXF：UCS X 轴的 Y 值和 Z 值
** 112
UCS Y 轴
DXF：X 值；APP：三维矢量
** 122, 132
DXF：UCS Y 轴的 Y 值和 Z 值
** 345
如果 UCS 是命名 UCS，则为 AcDbUCSTableRecord 的 ID/句柄。如果不存在，则为未命名 UCS
** 346
如果 UCS 为正交 UCS，则为基准 UCS 的 AcDbUCSTableRecord 的 ID/句柄（代码 79 非零）。如果不存在，且代码 79 非零，则将基准 UCS 作为 WORLD
** 79
UCS 的正交类型：
0 = UCS 为非正交视图
1 = 俯视图；2 = 仰视图
3 = 主视图；4 = 后视图
5 = 左视图；6 = 右视图
** 146
标高
** 170
着色打印模式：
0 = 按显示
1 = 线框
2 = 消隐
3 = 渲染
** 61
主栅格线与次栅格线比较的频率
** 332
背景 ID/句柄（可选）
** 333
着色打印 ID/句柄（可选）
** 348
视觉样式 ID/句柄（可选）
** 292
默认光源标志。没有指定用户光源时处于打开状态。
** 282
默认光源类型：
0 = 一条平行光
1 = 两条平行光
** 141
视图亮度
** 142
视图对比度
** 63,421,431
环境光颜色。只有不是黑色时才为白色。
** 361
阳光 ID/句柄（可选）
** 335
视口对象的软指针参照（用于图层视口特性替代）
** 343
视口对象的软指针参照（用于图层视口特性替代）
** 344
视口对象的软指针参照（用于图层视口特性替代）
** 91
视口对象的软指针参照（用于图层视口特性替代）
* wipeout
** 100
子类标记 (AcDbRasterImage)
** 90
类版本
** 10
插入点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：插入点的 Y 值和 Z 值（在 WCS 中）
** 11
单像素的 U 矢量（沿图像可见底部的点，从插入点开始）（在 WCS 中）
DXF：X 值；APP：三维点
** 21, 31
DXF：U 矢量的 Y 值和 Z 值（在 WCS 中）
** 12
单像素的 V 矢量（沿图像可见左侧的点，从插入点开始）（在 WCS 中）
DXF：X 值；APP：三维点
** 22, 32
DXF：V 矢量的 Y 值和 Z 值（在 WCS 中）
** 13
图像大小（像素）
DXF：U 值；APP：二维点（U 值和 V 值）
** 23
DXF：图像大小（像素）的 V 值
** 340
imagedef 对象的硬参照
** 70
图像显示特性：
1 = 显示图像
2 = 当与屏幕不对齐时显示图像
4 = 使用剪裁边界
8 = 透明度打开
** 280
剪裁状态：0 = 关闭；1 = 打开
** 281
亮度值（0-100；默认值 = 50）
** 282
对比度值（0-100；默认值 = 50）
** 283
淡入度值（0-100；默认值 = 0）
** 360
imagedef_reactor 对象的硬参照
** 71
剪裁边界类型。1 = 矩形；2 = 多边形
** 91
后面的裁剪边界顶点数
** 14
裁剪边界顶点（在 OCS 中）
DXF：X 值；APP：二维点（多个条目）
注意 1) 对于矩形剪裁边界类型，必须指定两个对角点。默认值为 (-0.5,-0.5)，(size.x-0.5,size.y-0.5)。2) 对于多边形剪裁边界类型，必须指定三个或更多顶点。多边形顶点必须按顺序列出
** 24
DXF：剪裁边界顶点的 Y 值（在 OCS 中）（多个条目）
* xline,射线
** 100
子类标记 (AcDbXline)
** 10
第一点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：第一点的 Y 值和 Z 值（在 WCS 中）
** 11
单位方向矢量（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21, 31
DXF：单位方向矢量的 Y 值和 Z 值（在 WCS 中）
* datatype
** 0-9
字符串（自在 AutoCAD 2000 中引入扩展符号名称开始，字数限制已由 255 个字符扩大到 2049 个单字节字符，不包括行末的换行符），有关更多信息，请参见“字符串值的存储”部分
** 10-39
双精度三维点值
** 40-59
双精度浮点值
** 60-79
16 位整数值
** 90-99
32 位整数值
** 100
字符串（最多 255 个字符；对于 Unicode 字符串，字符数要少一些）；有关更多信息，请参见“字符串值的存储”部分
** 102
字符串（最多 255 个字符；对于 Unicode 字符串，字符数要少一些）；有关更多信息，请参见“字符串值的存储”部分
** 105
表示 16 进制 (hex) 句柄值的字符串
** 110-119
双精度浮点值
** 120-129
双精度浮点值
** 130-139
双精度浮点值
** 140-149
双精度标量浮点值
** 160-169
64 位整数值
** 170-179
16 位整数值
** 210-239
双精度浮点值
** 270-279
16 位整数值
** 280-289
16 位整数值
** 290-299
布尔标志值
** 300-309
任意字符串；有关更多信息，请参见“字符串值的存储”部分
** 310-319
表示二进制数据块的十六进制值的字符串
** 320-329
表示 16 进制句柄值的字符串
** 330-369
表示十六进制对象 ID 的字符串
** 370-379
16 位整数值
** 380-389
16 位整数值
** 390-399
表示 16 进制句柄值的字符串
** 400-409
16 位整数值
** 410-419
字符串；有关更多信息，请参见“字符串值的存储”部分
** 420-429
32 位整数值
** 430-439
字符串；有关更多信息，请参见“字符串值的存储”部分
** 440-449
32 位整数值
** 450-459
长整数
** 460-469
双精度浮点值
** 470-479
字符串；有关更多信息，请参见“字符串值的存储”部分
** 480-481
表示 16 进制句柄值的字符串
** 999
注释（字符串）；有关更多信息，请参见“字符串值的存储”部分
** 1000-1009
字符串（与 0-9 代码范围的限制相同）；有关更多信息，请参见“字符串值的存储”部分
** 1010-1059
双精度浮点值
** 1060-1070
16 位整数值
** 1071
32 位整数值
* classes
** 0
记录类型 (CLASS)。标识 CLASS 记录的开始
** 1
类 DXF 记录名；始终唯一
** 2
C++ 类名。用于与定义对象类行为的软件绑定；始终唯一
** 3
应用程序名。当前未加载本段列出的某个类定义时出现在“警告”框中
** 90
代理功能标志。指示该对象作为代理时的功能的按位编码值：
0 = 不允许操作 (0)
1 = 允许删除 (0x1)
2 = 允许转换 (0x2)
4 = 允许更改颜色 (0x4)
8 = 允许更改图层 (0x8)
16 = 允许更改线型 (0x10)
32 = 允许更改线型比例 (0x20)
64 = 允许更改可见性 (0x40)
128 = 允许克隆 (0x80)
256 = 允许更改线宽 (0x100)
512 = 允许更改打印样式名 (0x200)
895 = 允许除克隆以外的所有操作 (0x37F)
1023 = 允许所有操作 (0x3FF)
1024 = 禁用代理警告对话框 (0x400)
32768 = R13 格式代理 (0x8000)
** 91
自定义类的实例计数
** 280
“是代理”标志。如果创建此 DXF 文件时未加载类，则设定为 1，否则设定为 0
** 281
“是图元”标志。如果类从 AcDbEntity 类派生并可能位于 BLOCKS 或 ENTITIES 段中，则设定为 1。如果设定为 0，则实例可能仅出现在 OBJECTS 段中
* appid
** 100
子类标记 (AcDbRegAppTableRecord)
** 2
用户提供（或应用程序提供）的应用程序名称（用于扩展数据）。这些表条目用于维护注册的所有应用程序的名称
** 70
标准标记值（按位编码值）：
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
* block_record
** 100
子类标记 (AcDbBlockTableRecord)
** 2
块名
** 340
关联的 LAYOUT 对象的硬指针 ID/句柄
** 70
块插入单位。
** 280
块分解性
** 281
块可测量性
** 310
DXF：位图预览的二进制数据（可选）
** 1001
扩展数据应用程序名称“ACAD”（可选）
** 1000
扩展数据字符串数据“设计中心数据”（可选）
** 1002
扩展数据的开始“{”（可选）
** 1070
AutoCAD 设计中心版本号
** 1070
插入单位：
0 = 无单位
1 = 英寸
2 = 英尺
3 = 英里
4 = 毫米
5 = 厘米
6 = 米
7 = 千米
8 = 微英寸
9 = 英里
10 = 码
11 = 埃
12 = 毫微米
13 = 微米
14 = 分米
15 = 十米
16 = 百米
17 = 百万公里
18 = 天文单位
19 = 光年
20 = 秒差距
21 = 美制测量英尺
22 = 美制测量英寸
23 = 美制测量码
24 = 美制测量英里
** 1002
扩展数据的结束“}”
* dimstyle,标注样式
** 100
子类标记 (AcDbDimStyleTableRecord)
** 2
标注样式名
** 70
标准标记值（按位编码值）：
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 3
DIMPOST
** 4
DIMAPOST
** 5
DIMBLK（已废弃，现在为对象 ID）
** 6
DIMBLK1（已废弃，现在为对象 ID）
** 7
DIMBLK2（已废弃，现在为对象 ID）
** 40
DIMSCALE
** 41
DIMASZ
** 42
DIMEXO
** 43
DIMDLI
** 44
DIMEXE
** 45
DIMRND
** 46
DIMDLE
** 47
DIMTP
** 48
DIMTM
** 140
DIMTXT
** 141
DIMCEN
** 142
DIMTSZ
** 143
DIMALTF
** 144
DIMLFAC
** 145
DIMTVP
** 146
DIMTFAC
** 147
DIMGAP
** 148
DIMALTRND
** 71
DIMTOL
** 72
DIMLIM
** 73
DIMTIH
** 74
DIMTOH
** 75
DIMSE1
** 76
DIMSE2
** 77
DIMTAD
** 78
DIMZIN
** 79
DIMAZIN
** 170
DIMALT
** 171
DIMALTD
** 172
DIMTOFL
** 173
DIMSAH
** 174
DIMTIX
** 175
DIMSOXD
** 176
DIMCLRD
** 177
DIMCLRE
** 178
DIMCLRT
** 179
DIMADEC
** 270
DIMUNIT（已废弃，现在使用 DIMLUNIT 和 DIMFRAC）
** 271
DIMDEC
** 272
DIMTDEC
** 273
DIMALTU
** 274
DIMALTTD
** 275
DIMAUNIT
** 276
DIMFRAC
** 277
DIMLUNIT
** 278
DIMDSEP
** 279
DIMTMOVE
** 280
DIMJUST
** 281
DIMSD1
** 282
DIMSD2
** 283
DIMTOLJ
** 284
DIMTZIN
** 285
DIMALTZ
** 286
DIMALTTZ
** 287
DIMFIT（已废弃，现在使用 DIMATFIT 和 DIMTMOVE)
** 288
DIMUPT
** 289
DIMATFIT
** 340
DIMTXSTY（参照的 STYLE 的句柄）
** 341
DIMLDRBLK（参照的 BLOCK 的句柄）
** 342
DIMBLK（参照的 BLOCK 的句柄）
** 343
DIMBLK1（参照的 BLOCK 的句柄）
** 344
DIMBLK2（参照的 BLOCK 的句柄）
** 371
DIMLWD（线宽枚举值）
** 372
DIMLWE（线宽枚举值）
* layer,图层
** 100
子类标记 (AcDbLayerTableRecord)
** 2
图层名
** 70
标准标记（按位编码值）：
1 = 冻结图层，否则解冻图层
2 = 默认情况下在新视口中冻结图层
4 = 锁定图层
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 62
颜色编号（如果为负值，则表明图层处于关闭状态）
** 6
线型名
** 290
打印标志。如果设定为 0，则不打印此图层
** 370
线宽枚举值
** 390
PlotStyleName 对象的硬指针 ID/句柄
** 347
Material 对象的硬指针 ID/句柄
* ltype,线型
** 100
子类标记 (AcDbLinetypeTableRecord)
** 2
线型名
** 70
标准标记值（按位编码值）：
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 3
线型的说明文字
** 72
对齐代码；值通常为 65，A 的 ASCII 代码
** 73
线型元素的数目
** 40
图案总长度
** 49
虚线、点或空间长度（每个元素一个条目）
** 74
复杂线型元素类型（每个元素一种类型）。默认值为 0（无嵌入的形/文字）
以下代码是位值：
1 = 如果设定了此位，则代码 50 指定绝对旋转；如果未设置此位，则代码 50 指定相对旋转
2 = 嵌入元素是字符串
4 = 嵌入元素是形
** 75
如果代码 74 指定嵌入的形，则表示形编号（每个元素一个编号）
如果代码 74 指定嵌入的字符串，此值将设定为 0
如果代码 74 设定为 0，则省略代码 75
** 340
指向 STYLE 对象的指针（如果代码 74 > 0，则每个元素一个指针）
** 46
S = 比例值（可选）；可存在多个条目
** 50
R = 嵌入的形或文字的相对旋转值（以弧度为单位），A = 嵌入的形或文字的绝对旋转值（以弧度为单位）；如果代码 74 指定了嵌入的形或字符串，则每个元素一个
** 44
X = X 偏移值（可选）；可存在多个条目
** 45
Y = Y 偏移值（可选）；可存在多个条目
** 9
字符串（如果代码 74 = 2，则每个元素一个字符串）
* style,样式
** 100
子类标记 (AcDbTextStyleTableRecord)
** 2
样式名
** 70
标准标记值（按位编码值）：
1 = 如果设定了此位，则此条目用于说明形
4 = 垂直文字
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 40
固定的文字高度；如果文字高度未固定，则为 0
** 41
宽度因子
** 50
倾斜角度
** 71
文字生成标志：
2 = 文字反向（在 X 轴方向镜像）
4 = 文字倒置（在 Y 轴方向镜像）
** 42
上次使用的高度
** 3
主要字体文件名
** 4
大字体文件名；如果无，则为空
** 1071
包含 Truetype 字体的字宽与字族、字符集以及斜体和粗体标志的长值
* ucs,用户坐标系
** 100
子类标记 (AcDbUCSTableRecord)
** 2
UCS 名称
** 70
标准标记值（按位编码值）：
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 10
原点（在 WCS 中）
DXF：X 值；APP：三维点
** 20, 30
DXF：原点的 Y 值和 Z 值（在 WCS 中）
** 11
X 轴方向（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21, 31
DXF：X 轴方向的 Y 值和 Z 值（在 WCS 中）
** 12
Y 轴方向（在 WCS 中）
DXF：X 值；APP：三维矢量
** 22, 32
DXF：Y 轴方向的 Y 值和 Z 值（在 WCS 中）
** 79
总是为 0
** 146
标高
** 346
基准 UCS 的 ID/句柄（如果为正交）。如果 79 代码为 0，则不显示此代码。如果未显示此代码，且 79 代码不为零，则假定基准 UCS 为 WORLD
** 71
正交类型（可选；通常与 13、23 和 33 代码成对出现）：
1 = 俯视图；2 = 仰视图
3 = 主视图；4 = 后视图
5 = 左视图；6 = 右视图
** 13
与此 UCS 相关的正交类型的原点
DXF：原点的 X 值；APP：三维点
** 23, 33
DXF：原点的 Y 值和 Y 值
* view,视图
** 100
子类标记 (AcDbViewTableRecord)
** 2
视图名称
** 70
标准标记值（按位编码值）：
1 = 如果设定了此位，则为图纸空间视图
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 40
视图高度（在 DCS 中）
** 10
视口中心点（在 DCS 中）
DXF：X 值；APP：二维点
** 20
DXF：视图中心点的 Y 值（在 DCS 中）
** 41
视图宽度（在 DCS 中）
** 11
来自目标的观察方向（在 WCS 中）
DXF：X 值；APP：三维矢量
** 21, 31
DXF：来自目标的观察方向的 Y 值和 Z 值（在 WCS 中）
** 12
目标点（在 WCS 中）
DXF：X 值；APP：三维点
** 22, 32
DXF：目标点的 Y 值和 Z 值（在 WCS 中）
** 42
焦距
** 43
前向剪裁平面（距目标点的偏移）
** 44
后向剪裁平面（距目标点的偏移）
** 50
扭曲角度
** 71
视图模式（参见 VIEWMODE 系统变量）
** 281
渲染模式：
0 = 二维优化（传统二维）
1 = 线框
2 = 隐藏线
3 = 平面着色
4 = 体着色
5 = 带线框平面着色
6 = 带线框体着色
所有非二维优化渲染模式均使用新三维图形管道。这些值直接与 SHADEMODE 命令和 AcDbAbstractViewTableRecord::RenderMode 枚举相对应
** 72
如果存在与此视图相关联的 UCS，则为 1；否则为 0
** 73
如果相机可打印，则为 1
** 332
背景对象的软指针 ID/句柄（可选）
** 334
活动剖切对象的软指针 ID/句柄（可选）
** 348
视觉样式对象的硬指针 ID/句柄（可选）
** 361
Sun 硬所有权 ID
* vport
** 100
子类标记 (AcDbViewportTableRecord)
** 2
视口名
** 70
标准标记值（按位编码值）：
16 = 如果设定了此位，则表条目外部依赖于外部参照
32 = 如果同时设定了此位和位 16，则表明已成功融入了外部依赖的外部参照
64 = 如果设定了此位，则表明在上次编辑图形时，图形中至少有一个图元参照了表条目。（此标志对 AutoCAD 命令很有用。大多数读取 DXF 文件的程序都可以忽略它，并且无需由写入 DXF 文件的程序对其进行设定）
** 10
视口的左下角
DXF：X 值；APP：二维点
** 20
DXF：视口左下角的 Y 值
** 11
视口右上角
DXF：X 值；APP：二维点
** 21
DXF：视口右上角的 Y 值
** 12
视口中心点（在 DCS 中）
DXF：X 值；APP：二维点
** 22
DXF：视图中心点的 Y 值（在 DCS 中）
** 13
捕捉基点（在 DCS 中）
DXF：X 值；APP：二维点
** 23
DXF：捕捉基点的 Y 值（在 DCS 中）
** 14
捕捉间距 X 和 Y
DXF：X 值；APP：二维点
** 24
DXF：捕捉间距 X 和 Y 的 Y 值
** 15
栅格间距 X 和 Y
DXF：X 值；APP：二维点
** 25
DXF：栅格间距 X 和 Y 的 Y 值
** 16
相对于目标点的观察方向（在 WCS 中）
DXF：X 值；APP：三维点
** 26, 36
DXF：相对于目标点的观察方向的 Y 值和 Z 值
（在 WCS 中）
** 17
观察目标点（在 WCS 中）
DXF：X 值；APP：三维点
** 27, 37
DXF：观察目标点的 Y 值和 Z 值（在 WCS 中）
** 42
焦距
** 43
前向剪裁平面（距目标点的偏移）
** 44
后向剪裁平面（距目标点的偏移）
** 45
视图高度
** 50
捕捉旋转角度
** 51
视图扭转角度
** 72
圆形边
** 331 或 441
冻结图层对象的软指针 ID/句柄或硬指针 ID/句柄；为每个冻结图层重复
** 1
打印样式表
** 281
渲染模式：
0 = 二维优化（传统二维）
1 = 线框
2 = 隐藏线
3 = 平面着色
4 = 体着色
5 = 带线框平面着色
6 = 带线框体着色
所有非二维优化渲染模式均使用新三维图形管道。这些值直接与 SHADEMODE 命令和 AcDbAbstractViewTableRecord::RenderMode 枚举相对应
** 71
视图模式（参见 VIEWMODE 系统变量）
** 74
UCSICON 设置
** 110
UCS 原点
DXF：X 值；APP：三维点
** 120, 130
DXF：UCS 原点的 Y 值和 Z 值
** 111
UCS X 轴
DXF：X 值；APP：三维矢量
** 121, 131
DXF：UCS X 轴的 Y 值和 Z 值
** 112
UCS Y 轴
DXF：X 值；APP：三维矢量
** 122, 132
DXF：UCS Y 轴的 Y 值和 Z 值
** 345
如果 UCS 是命名 UCS，则为 AcDbUCSTableRecord 的 ID/句柄。如果不存在，则为未命名 UCS
** 346
如果 UCS 为正交 UCS，则为基准 UCS 的 AcDbUCSTableRecord 的 ID/句柄（代码 79 非零）。如果不存在，且代码 79 非零，则将基准 UCS 作为 WORLD
** 79
UCS 的正交类型
0 = UCS 为非正交视图
1 = 俯视
2 = 仰视
3 = 前视
4 = 后视
5 = 左视
6 = 右视
** 146
标高
** 170
着色打印设置
** 61
主栅格线
** 332
背景对象的软指针 ID/句柄（可选）
** 333
着色打印对象的软指针 ID/句柄（可选）
** 348
视觉样式对象的硬指针 ID/句柄（可选）
** 292
标志上的默认光源
** 282
默认光源类型
0 = 一条平行光
1 = 两条平行光
** 141
亮度
** 142
对比度
** 63, 421, 431
环境色（仅当不是黑色时输出）
* block,块
** 0
图元类型 (BLOCK)
** 5
句柄
** 102
应用程序定义的组的开始“{application_name”。例如，“{ACAD_REACTORS”表示 AutoCAD 永久反应器组的开始（可选）
应用程序定义的代码
** 102 组中的代码和值由应用程序定义（可选）
** 102
组的结束“}”（可选）
** 330
所有者对象的软指针 ID/句柄
** 100
子类标记 (AcDbEntity)
** 8
图层名
** 100
子类标记 (AcDbBlockBegin)
** 2
块名
** 70
块类型标志（按位编码值，可以组合使用）：
=dxf70=
** 10
基点
DXF：X 值；APP：三维点
** 20, 30
DXF：基点的 Y 值和 Y 值
** 3
块名
** 1
外部参照路径名
** 4
块说明（可选）
* endblock
** 0
图元类型 (ENDBLK)
** 5
句柄
** 102
应用程序定义的组的开始“{application_name”。例如，“{ACAD_REACTORS”表示 AutoCAD 永久反应器组的开始（可选）
应用程序定义的代码
** 102 组中的代码和值由应用程序定义（可选）
** 102
组的结束“}”（可选）
** 330
所有者对象的软指针 ID/句柄
** 100
子类标记 (AcDbEntity)
** 8
图层名
** 100
子类标记 (AcDbBlockEnd)
